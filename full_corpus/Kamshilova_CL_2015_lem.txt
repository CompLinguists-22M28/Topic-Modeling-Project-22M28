шаблон для автоматический поиск ошибка в именной и глагольный группа (анализ корпус ученический текстов) 1. проблема разметка корпус ученический текст учебный корпус (learner corpora), или корпус ученический текстов, с сам начало задумываться как база для извлечение информация о ошибка в речь на иностранный (l3) или второй (l2) языке. отличительный особенность такой корпус являться то, что при они обработка приходиться иметь дело с ненормализованный текстами, что делать автоматический (и не только) разметка текст весьма проблематичной. поскольку именно извлечение информация о отклонение от норма являться основной задача строительство такой корпусов, приоритет способ и тип они разметка представляться очевидный [hirschmann 2009]. собственно разметка ошибка располагать единичный корпусы. наиболее удачный до сей пора можно считать такой вариант, когда учебный корпус представлять себя коллекция ошибок, предварительно распределённый (размеченных) по класс [соснина 2006]. однако разметка в полнотекстовый учебный корпусе, такой как spbefl lc , сопрячь с рядом трудностей, связанный с тем, что определить ошибка однозначно часто не представляться возможным: в один словоформа мочь быть обнаружить орфографические, грамматические, лексический и другой нарушения. известный положительный опыт разметка ошибок, в тот число основать на многоуровневый архитектура [hana et al. 2010, hirschmann 2009 и др.], благодаря который уровень разметка мочь постоянно добавляться при сохранение ранее получить данных. очевидно, что разметка ошибка в корпус подобный spbefl должный осуществляться вручную с привлечение экспертный оценки, что даже в рамка такой малый корпус представляться весьма трудоёмкий и долгий работой. естественно желание облегчить этот работа с помощь инструмент разметки. для это необходимо, во-первых, подобрать инструмент автоматический морфологический разметка с максимальный «иммунитетом» к многочисленный и непредсказуемый ошибкам, во-вторых, определить процедура автоматический извлечение ошибок, который позволить бы классифицировать ошибка и создать таксономия тег для они последующий разметки. 2. выбор морфологизатор для ненормализованный текст корпус в результат несколько проб, наш выбор остановиться на хорошо известный морфологический анализатор на платформа natural language toolkit (nltk) [bird et al. 2010]. предварительно обработать текст (по условие инструмента) подвергаться токенизация и, затем, собственно морфологический анализ (по алгоритм униграмм), при который каждый токен приписываться частеречной и грамматический характеристика в вид тэга. результат работа анализатор nltk с текст корпус в целое можно признать удовлетворительными, хотя ручной проверка выдача позволить обнаружить ряд ошибка (разрешение омонимия в польза наиболее частотный значение в словарный база инструмента, отнесение местоимение к класс детерминатив даже в отсутствие именной группа и др.). в целом, морфологизатор давать достаточно точный грамматический характеристика словоформе, игнорировать большинство ошибок. это позволять надеяться, что после ручной коррекции, в разметить корпус можно быть извлекать информацию, например, о весь именной и глагольный лексема в задать окружении. 3. определение контекст и разработка шаблон для извлечение ошибка в иго и год в текст корпус большой количество грамматический ошибка у автор корпус встречаться в область детерминация имя и образование глагольный форм. поэтому извлечение из текст именной (иг) и глагольный группа (гг) мочь бы ускорить обнаружение и разметка ошибка в рамка этот категорий. для это необходимо быть найти или создать инструмент, генерировать отчёт по задать морфологический и контекстный параметрам. алгоритм для решение этот задача быть разработать на язык python и применить к анализ корпуса, предварительно разметить с помощь анализатор nltk. иго в текст корпус иметь достаточно простой структуру, помимо ядро-существительное в состав иго входить детерминатив, который мочь быть выраженный артикль или местоимение (указательным, неопределённый и др.), и возможный модификатор, который в текст школьник частый весь выраженный прилагательным, редкий существительное иметь при себя два модификатора. поэтому максимальный левый окружение ядерный существительное задаваться в программа 3 токенами: для детерминатив и два определений. такой образом, в качество контекст для извлечение иго использоваться четырехкомпонентный n-грамма, четвёртый позиция который задаваться тег для существительное (nn, nns , np, nps, nr, nrs) алгоритм извлечение иг, разработать по задать параметр на язык python, в результат предоставлять выдача существительное в они близкий контекст (см. рис. 1). установленный такой образ контекст достаточный для определение ошибка на согласование по число (become a real [friends], without this pretty [creatures]), пропуск артикль (or people without [friend], do not have [opportunity]). если для определение ошибка контекст недостаточен, он можно увеличивать рядом изменение в код программы. аналогичный образ определяться контекст для извлечение гг, в качество ядро контекст рассматриваться определять морфологизатор глагольный форма разный функциональный класс (связки, знаменательный глаголы, модальный глаголы). анализ получить контекст позволить выделить некоторый группа ошибок, дальнейший поиск который можно автоматизировать с помощь создание шаблонов. шаблон представлять себя задать набор тег и позволять автоматически находить определённый тип ошибки. например, в год для случай тип does ('doz') this stuff has ('hvz') something bad in it? шаблон иметь следующий вид: if (tokens [i][1]='dos' or tokens [i][1]='do') and (tokens[i+2][1]='vbz' or tokens [i+2][1]='hvz' or tokens [i+3][1]='vbz' or tokens [i+3][1]='hvz'...) в качество условие для программа поиск ошибка этот шаблон быть искать всё случай совместный употребление вспомогательный и знаменательный глагол в 3 л. ед. ч. в вопросительный предложение на расстояние до три токен (длить группа подлежащего). класс выделить такой образ ошибка возможно в дальнейший автоматически приписать общий тег. пример шаблон для поиск ошибка в иго мочь служить набор тегов, описывать стандартный ошибка по несогласование число существительное и он детерминатив (become a real [friends], without this pretty [creatures]): if token [i][0]='dt' and (token [i+1][1]='nns' or token [i+1][1]='nps' or token [i+2][1]="nns' or token [i+2][1]='nps'...), который быть искать всё случай нарушение согласование существительное и он детерминатив по число на расстояние до два токен с возможность автоматически приписать тег дать ошибки. 4. заключение выбор морфологический анализатор на платформа nltk для разметка ненормализованный текст корпус оказаться удачным, поскольку он малочувствительный к ошибка в текст корпуса, он результат достаточно точный и сокращать усилие на ручной коррекцию. предварительный анализ текст и разработать в ход исследование алгоритм позволить задать (на основа тег разметить корпуса) и автоматически извлечь минимальный контекст для выявление класс ошибка в иго и гг. для каждый класс ошибка возможно задать шаблон в вид задать набор тегов, который позволять извлечь из корпус всё ошибка данный класса. результат поиск по шаблон мочь стать последующий автоматический разметка ошибок. первый получить результат внушать некоторый оптимизм в осуществление автоматический разметка ошибка в корпус ученический текстов, однако следовать признать ограниченность наш вывод область иго и гг.