р. гарабик, в.п. захаров параллельный русско-словацкий корпус 1. введение один из интенсивно развивающийся область современный корпусный лингвистика являться развитие многоязычный ресурсов, в тот число особенно параллельный корпусов, который позволять исследовать проблема перевод текстов, сравнивать (переть соответствовать разметке) лексические, грамматический и синтаксический структура разный языков, а также являться база для отладка система автоматический перевод и для создание словарей. 2. формат и обработка текст тексты, входящий в состав корпуса, подвергаться обработка и конверсия на несколько уровнях, причём на каждый уровень проводиться специфический тип обработки. этот модульный система при необходимость внесение изменение позволять заменить только нужный часть без переработка целый системы. сначала текст переводиться с входной формат (html, ms word, open document text и др.) в общий текстовый формат в кодировка utf-8 с абзацами, разделить пустой строкой. такой формат удобно редактировать вручную, чтобы сравнивать начало и конец параллельный текстов, или удалять части, который отсутствовать в один из текст (как, например, предисловие переводчика). этот файл копироваться в неизменный вид на следующий уровень (что позволять проверить редактирование на предыдущий шаг и исправить ошибка или вернуть неправильно удалённый часть текста). после это текст лемматизируется, морфологически размечаться и записываться в формат tei xml . этот формат конвертироваться в следующий файл в формате, удовлетворять требование программа выравнивание (каждый предложение отдельный строкой, абзац определить специальный символ ¶). после сравнение это файл с соответствовать файл на параллельный язык результат выравнивание включаться в tei xml файл, где каждый предложение снабжаться ссылка в параллельный файл, который записываться как атрибут предложение (например, <s link="20+21+22"> значит, что этот предложение в второй язык соответствовать предложение с номер 20, 21 и 22). после тот разметить такой образ текст конвертироваться в формат корпусный менеджера. 3. морфологический разметка текст в словацкий национальный корпус автоматически лемматизировать и морфологически разметить . система морфологический тег описывать всё грамматический категория слово и основываться на позиционный кодировании. каждый отдельный грамматический категория соответствовать один символ и определённый позиция. первый позиция занимать код часть речи, включая сюда и код для сокращений, знак препинания, цифр, иностранный слово и неопределённый элемент текста. морфологический разметка русский текст базироваться на программа морфологический разметки, разработать а. сокирко, на основа морфологический анализ система «диалинг». в этот программа граммема записываться в вид ключевой слово с они значение . далее этот форма запись приводиться к формату, принять в корпусный менеджере. 4. библиографический разметка библиографический разметка в принцип следовать система аннотация словацкий национальный корпус , где аннотация каждый документ включать библиографический описание источника, стиль и жанр текста, дата издание оригинала, дата издание перевода, оригинальный название, имя и пол переводчик и автора. 5. выравнивание для выравнивание использовать программа hunalign , который автоматически сравнивать текст на основа совпадение относительный длина предложений, разделение текст на абзац и внешний словаря. текст мочь поступать на вход программа выравнивание либо без всякий лингвистический обработка (только с сегментация на предложения), либо в лемматизировать виде. присутствие лемма являться необходимый условие для использование словарь (так как в словарь содержаться только основной форма слов). в наш корпус сначала выравнивание производиться без словаря, затем на основа результат выравнивание автоматически возникнуть предварительный словарь совпадать слов, из который вручную быть удалить неверный пара (около 75% пар) и добавить перевод самый частотный слов. далее этот словарь быть использовать для повторный выравнивание тот же текстов. 6. проблема избыточный фрагмент в начало или в конец текст (как, например, предисловие переводчик или информация о авторе) необходимо удалять вручную. также необходимо сравнивать начало оригинальный и переводный текстов, в тот число название, имя автора, и они концовки, особенно последний строки, который часто содержать разный дать (например, год или место возникновение книги, подпись автора), так как для хороший выравнивание требуется, чтобы оригинал и перевод максимально совпадали. значительный часть перевод с русский на словацкий – это русский классика xix века, следовательно, это достаточно важный часть корпуса. текст русский классика отличаться несколько специфический свойствами. например, присутствие французский фраза в русский тексте, который иногда перевести в сносках, а иногда и нет. надо иметь в виду, что оригинальный версия русский текст часто включать французский текст без перевод как отражение языковой ситуация свой времени. также следовать учитывать, что мы работать с электронный версия книг, в процесс создание который такой сноска мочь потеряться. в словацкий текст этот фраза либо поясняться (в сносках), либо переводиться на словацкий язык без примечаний, что в оригинал они представить не на русский языке. такой образ возникать разный ситуации: лишний текст (сноски) в словацкий часть корпус либо в русский (в словацкий сноска отсутствуют), или же французский текст в русский часть соответствовать фрагмент на словацкий языке. всё это портить качество выравнивания. второй важный проблема связать с тем, что выравнивание происходить на основа предложений, а членение текст на предложение в переводный текст часто отличаться от оригинала. частый весь это происходить в прямой речи, как мы это эмпирически обнаружили. кроме того, запись прямой речь в перевод часто использовать другой типографский знак и другой правило оформление по сравнение с оригиналом. этот проблему, по-видимому, можно решить автоматически путём тщательный настройка алгоритм сегментация текст на предложения. 7. поиск в корпус для поиск в корпус пользоваться система manatee/bonito , который состоять из сервер (manatee) и клиент (bonito), но в наш параллельный корпус клиент не используется. вместе он быть создать пользовательский веб-интерфейс с использование программный каркас для веб-приложение karrigell в язык программирование python . пользовательский интерфейс включать виртуальный клавиатура с буква русский алфавита, словацкий буква с диакритика и несколько другой полезный буква и символами. сервер позволять осуществлять простой поиск один слова, или фраза (несколько слово в определённый порядке), или произвольный регулярный выражение из слов, лемма и морфологический тегов. веб-интерфейс (рис. 1) доступный в открытый доступ на страничка словацкий национальный корпус . рис. 1. пользовательский интерфейс корпус 8. состояние дело и направление дальнейший развитие в настоящий время корпус содержать в словацкий часть 818 097 слов, 43 381 предложений, и в русский часть 819 009 слово и 46 832 предложений. разница в количество предложений, скорее всего, происходить от несовершенство алгоритм сегментация и не иметь другой важный причин. из предварительный исследование в корпус мы получили, что выравнивание совсем отсутствовать в 2,4% предложение и 0,6% предложение содержать лишний сноска в словацкий тексте, объяснять французский фразы. также 24,1% пара предложение таковы, что один предложение в один язык соответствовать два или большой предложение в второй (но при это они выровнять такой образом, что в это предложение всегда есть правильный ссылка хотя бы к один из соответствовать он предложение второй языка). из это следует, что для усовершенствование выравнивание самый полезный быть доработка алгоритм автоматический сегментация по предложениям. в дальнейший развитие корпус мы собираемся, прежде всего, включить в корпус как можно больший число текстов, главный образом, текст русский классики, но также и текст другой жанров, расширить возможность отображение результат поиск (в частности, дать возможность просмотр дополнительный контекст конкордансов) и сделать исправление и усовершенствование в пользовательский интерфейсе.