н.с. константинов критерий выбор средство для представление онтология (на материал по «финансовый менеджмент») 1. введение данный исследование направить на построение онтология для предметный область (по) «финансовый менеджмент», при это особый внимание быть уделить подобласть «финансовый риски». в ход работа над создание дать онтология использоваться несколько онторедакторов, такой образом, быть возможность сравнить они функциональность и удобство для решение прикладной задач. онторедактор представлять себя специальный программы, обеспечивать удобный интерфейс для разработчик онтологий. они главный задача – облегчить и ускорить процесс создание онтологий. однако для наиболее эффективный использование онторедактор необходимо изначально определиться с специфика обрабатывать область и в соответствие с это подобрать программу, подходящий для создавать онтологии. в многое оценка функциональность программа для построение онтология зависеть от следующий факторов: • практический задача (цель разработчика); • область знания, в рамка который строиться онтология; • разрабатывать онтология 1 . сейчас существовать множество коммерческий и свободно распространять программный продукт для создание и редактирование онтологий. целый ряд инструмент позволять также поддерживать документирование онтологий, импорт и экспорт в различный форматы, а также выполнять другой функции. в ход исследование вестись работа с два онторедакторами: doe и protégé. в статья обсуждаться особенность дать средство в отношение они пригодность для достижение поставить цели. 2. основной черта онторедактор doe и protégé 2.1. doe прежде всего, следовать обратить внимание на специфика внутренний организация doe, где присутствуют: классы; свойства; – домены. в основа инструмент doe лежать методология построение онтологий, разработать р. тронси и а. исаак 1 . дать исследователь отказаться от использование существующий метод в связь с тем, что они не давать возможность строго и точно структурировать онтологии, в частности, подробно описывать родовидовой отношения. использование предложить автор методология должный обязать «создатель онтология выражать значение, который часто специфицироваться только в качество дополнительный комментария» 2 . они предложение заключаться в прохождение несколько этап при конструирование онтологии. на первый стадия предлагаться подбирать понятия, предварительно устанавливать место вводить понятие в родовидовой иерархии. далее выделяться четыре дифференциальный принципа, описывать взаимоотношение между понятиями. исследователь призывать формулировать сходство и различие с родовой понятие (отцом), а также сходство и различие с координировать понятие (братьями). в результат этот процедура получаться подробный описание значение понятие и он определение. наряду с построение дерево понятие на данный этап формироваться и дерево отношений. в рамка это шаг предполагаться также добавление дополнительный лингвоспецифичный информация (длить конкретный языка: предпочтительный термин, энциклопедический определение, синонимы). результат описать действие являться создание так называть дифференциальный онтология (откуда и название редактор – doe, differential ontology editor). на следующий этап разработчики, пользоваться doe, получать возможность сформировать ещё одну, так называть референциальный онтологию, в который включаться отдельный экземпляры, дополняться и конкретизироваться отношения. описать методология подчинить создание онтология в рамка doe, и на этот же принцип базироваться весь инструмент, как он структура, так и интерфейс. 2.2. protégé protégé являться локальный свободно распространять программой, разработать в стэнфордский университет 1 . инструмент иметь графический интерфейс, удобный для использование неопытный пользователями, снабдить справка и примерами. protégé основать на фреймовый модель представление знание okbc (open knowledge base connectivity) и снабдить рядом плагинов. в рамка protégé выделять protégé frames и protégé owl, каждый из они обладать специфический интерфейсом. в дать работа мы затронуть только protégé frames, и далее под protégé быть подразумевать именно protégé frames. так, в protégé присутствуют: классы; слот (= свойства); экземпляры; фасет (= ограничение слотов). 3. специфика онторедактор doe и protégé теперь, когда мы прояснить некоторый общий черта онторедактор doe и protégé, продемонстрировать специфика сравнивать редакторов, переходить от один элемент онтология к другому. мы рассмотреть особенность doe и protégé в отношение 1) они повторный использование в другой приложениях; 2) работа с классами; 3) представление свойство и отношений; 4) описание экземпляров; 5) использование аксиом. 3.1. повторный использование doe и protégé в другой приложение один из преимущество онтология считаться возможность она повторный использование в другой приложениях. в связь с это очень важный являться простота она перенос на другой платформа для внедрение в другой программный продукт и онтологии. это подразумевать возможность перевод онтология на другой формальный языки. редактор doe предоставлять возможность осуществлять импорт (rdf, owl, импорт в собственный формат) и экспорт (экспорт из собственный формата, cgxml, daml+oil, oil plain text, oil xml, rdfc, owl rdf/xml exchange syntax, owl xml presentation syntax). однако на данный этап порой возникать проблемы, и экспорт не осуществляться по ряд технический причин, такой как, например, наличие специальный символ в онтологии, создать в doe, который запретить в другой формальный языках. также особенность doe являться то, что этот программа разрешать использование пробел в имя элементов, хотя другой инструмент не всегда поддерживать этот возможность. система protégé предоставлять возможность импорт в собственный формат (.pont and .pins), а также в rdf, rdfs и owl. экспорт осуществляться в формат rdf; rdfs; xml; owl; clips; n3; turtle. 3.2. работа с класс в doe и protégé при сравнение онторедактор выявляться фундаментальный отличие в работа с классами. как уже упоминаться ранее, в основа методологии, использовать в doe, лежать формулирование четыре отличительный свойство при описание классов. при это similarity with siblings (сходство с братьями) и similarity with parent (сходство с отцом) задаваться для весь брат в иерархии, то есть при изменение они для один понятие они изменяться и для координировать понятий. так, например, в наш иерархия присутствовать понятие расход и он видовой понятие условно-постоянный расход и переменный расходы. если мы изменять similarity with siblings для понятие переменный расходы, то автоматически изменение происходить и для понятие условно-постоянный расходы, о чем программа предварительно предупреждала. однако similarity with parent (сходство с отцом) нигде в явный форма не используется. также сложно быть понять разница между similarity with siblings и similarity with parent. такой подход порой помогать формализовать описание и найти основание для выделение вид из родовой понятия, но порой представляться избыточным. после тот как задать три дифференциальный признака, существовать возможность автоматический формирование определение для понятие или так называть difference with parent (отличие от отца). оно складываться из similarity with siblings (сходство с братьями) и difference with siblings (отличие от братьев), представлять через двоеточия. однако генерировать определение избыточны, громоздки, они сложно сокращать. так, можно привести определения, автоматически сгенерировать в рамка doe для понятие инвестиционный риск: показатель, измерять вариабельность доход или доходности, когда предприятие характеризоваться с позиция источник средств: вариабельность доход или доходность в результат процесс инвестиционный деятельность предприятия. с другой стороны, преимущество интерфейс doe являться возможность отображение в определение весь вышестоящий понятий, что порой мочь быть удобным. так, для понятие постоянный расход мы мочь сразу увидеть определение для понятие расход и условно-постоянный расходы, стоящий выше в иерархии. с точка зрение работа с класс также являться удобный наличие уже встроить поле «синонимы», а также «лексический предпочтения», где можно выбрать предпочтительный языковой выражение для данный понятия. такой образом, в качество имя класс можно выбрать один наименование, а в качество предпочтительный языковой выражение совершенно другое. стоить упомянуть, что при работа с doe возникнуть некоторый трудность технический характера. этот инструмент адаптировать лишь для английского, французского, немецкий и ряд другой языков. однако русский язык не войти в этот список, такой образом, при создание онтология прийтись использовать транслитерацию. аналогично возникнуть сложность с употребление специальный символов, такой как кавычки, присутствовать в название некоторый терминов. дать проблема решаться они замена символ нижний подчёркивание («_»). в онторедактор protégé существовать возможность описание так называть метаклассов. в иерархия метакласс содержаться классы, слот и фасеты. метакласс представлять себя свой родиться «шаблон» для описание элементов, создавать в рамка это метакласса. здесь можно, например, описывать, по какой параметр понятия, создавать в рамка данный метакласса, мочь получать характеристики. так, например, мы указываем, что понятия, создавать в рамка метакласс items мочь иметь синонимы. далее при создание класс мы получать возможность заполнять поле «синонимы», добавлять новый синонимы. далее, работать с редактор форма и применять он для соответствовать метакласса, можно выбрать тип представление класс на экране, например, можно указать, что в иерархия быть отображаться не сам понятия, а они прямой вид или же они определения. следовать заметить, что protégé относиться к система представление знаний, который позволять осуществлять множественный наследование в иерархия классов, то есть класс мочь быть подкласс несколько классов. дать возможность в рамка doe, например, отсутствует. однако в protégé, в отличие от doe, изначально не предусмотреть добавление синонимов, и для это нужно специально предусмотреть отдельный слот при описание метакласс в процесс создание онтологии. protégé свободно поддерживать различный языки, в тот число и русский, что значительно облегчать работу. в отличие от doe, данный онторедактор запрещать использование пробел в имя класс и свойств, в наш онтология пробел быть заменить символ нижний подчёркивание («_»). запрет на использование пробел не позволять свободно заносить такой понятия, как норма прибыли, премия за риск и многие другие. этот запрет можно отнести к неудобство редактор protégé. 3.3. представление свойство и отношение в doe и protégé рассмотреть онторедактор doe и protégé с точка зрение работа с свойство и отношениями. в рамка doe есть возможность строить иерархия отношений, такой образ прояснять специфика отношений, они взаимосвязь. вместе с тем, иерархия отношение существовать независимо от иерархия классов, то есть в дифференциальный часть онтология нет связь между понятие и отношениями, она появляться лишь в референциальный части, где можно определить домен отношения, указывать на принадлежность аргумент этот отношение к определённый классам. однако в пример онтологий, привести в doe, домен порой вообще не описываться или задаваться не до конец (не конкретизироваться домен, но указывается, что это, например, бинарный отношения). оказываться невозможный задание конкретный экземпляр отношение между, например, отдельный экземпляр понятий, который задаваться списком, связанный с какой-то понятием. так, мы быть необходимо указать, что понятие риск включать два аспект (рассматривать как меронимы): систематический риск и несистематический риск. в данный редактор связать этот три понятие не представляться возможным. в рамка doe нет возможность описание универсальный отношений, который мочь применяться для понятий, относиться к разнообразный класс (как, например, в случай партитивный отношений). разумеется, такой родиться отношение можно вводить, не задавать домен вообще, но тогда полностью утрачиваться связь с иерархия понятий. в protégé также есть возможность построение иерархия отношение (называть в protégé слотами), но в рамка метаклассов. любой слот являться реализация метакласс standard_slot, включить в иерархия метаклассов. однако в protégé нет ограничение на использование слот для связь элемент онтологии, что делать онтология более наглядный и структурированной. есть возможность связать отдельный класс или экземпляр какой-то отношением. в рамка дать среда разработка можно свободно создавать и широко описывать новый отношение в дополнение к стандартным. список такой стандартный слот также велик, например: :creator; :direct domain; documentation; :role; :name и другие. они мочь применяться в различный область и являться универсальными. для наш онтология в дополнение к стандартный слот мы создать ряд собственных: :synonym; :is_holomym_of; :is_meronym_of; :is_instrument_of; и некоторый другие. это позволить в дальнейший беспрепятственно задавать отношение меронимия и не только. так для связь понятие риск с он меронить быть достаточно указать, что риск иметь два меронима. также создание дополнительный слот решить проблема отображение ассоциативный отношений, что открыть возможность для детализация онтологии. в protégé присутствовать также так называть фасет – своеобразный ограничения, накладывать на слоты. к фасет относиться мощность отношения, домен, диапазон и некоторый другие. использование фасет давать возможность конкретизировать отношения, описывать они более подробно, такой образом, в онтология мочь быть включить большой информации. как упоминаться ранее, слот мочь связывать между себя класс или экземпляры, но также возможно установление отношение между сам слотами, например: owl:equivalentproperty (определять эквивалентный свойство) и owl:inverseof (определять обратный свойство). это упрощать работа с слотами, так как, например, при заполнение один из слотов, состоять в отношение owl:inverseof, значение обратный он заполняться автоматически. так, например, в наш онтология обратный являться :is_meronym_of_ и :is_holonym_of, отражать партитивный отношения. 3.4. описание экземпляр в doe и protégé работа с экземпляр в рамка данный исследование не велась, однако хотеться упомянуть и этот компонент онтология в обсуждать онторедакторах. хотя референциальный часть doe мало использоваться при создание наш онтологии, быть заметить ряд она особенностей. так, дифференциальный и референциальный онтология формироваться одновременно, при добавление в дифференциальный часть элемент появляться автоматически и в референциальной. аналогично дело обстоять и с удалением, но стоить упомянуть, что удалять элемент, занести в дифференциальный онтологии, в рамка референциальный нельзя. однако система понятие дифференциальный онтология мочь не полностью совпадать с система понятие референциальный онтологии, это достигаться за счёт возможность занесение элемент в референциальный части, который не появляться в дифференциальный (этота элемент можно удалять в референциальный онтологии). предназначение этот опция и она применимость для практический цель не очень ясна. в референциальный часть онтология понятие можно приписать второй отец помимо того, что уже приписать в дифференциальной. при это понятие в референциальный онтология помечаться особый образом, однако в дифференциальный онтология это никак не отображается. в doe легко добавлять новый элементы, но, как упоминаться ранее, нет возможность связывать они между себя какой-либо отношениями. в protégé работа с экземпляр также не представлять особый сложности, но существовать намного большой возможностей, чем в doe. так, в protégé можно приписывать какой-то конкретный характеристика экземпляру, задавать отношение между экземплярами. существовать также возможность установление связь между экземпляр и классом. в рамка protégé можно определять форма представление экземпляр на экране, что, безусловно, являться удобный и адаптировать интерфейс под конкретный задачу. 3.5. аксиома в doe и protégé говорить о аксиомах, стоить заметить, что в doe они не поддерживаются, а в protégé существовать как дополнительный опция. однако в protégé возможно использование сложный запрос для поиск в рамка онтологии, то есть можно осуществлять выборка информация из создать структуры. пример такой запрос представить на рис. 1: этот запрос искать всё элементы, который являться инструмент «хеджирования». результат данный поиск отображаться в правый части, где указано, что инструмент хеджирование считаться опцион, своп, форвардный контракт и хедж. такой образом, можно осуществлять проверка информация при разработка онтологии, а также использовать создать онтология в качество упрощённый вопросно-ответный системы. 4. вывод подводить итог, можно сказать, что doe простой в использовании, а protégé предоставлять большой возможность для адаптация под конкретный задача и конкретный пользователя. в рамка наш исследование предпочтение быть отдать protégé как системе, давать возможность эффективно отображать связь элемент друг с другом.