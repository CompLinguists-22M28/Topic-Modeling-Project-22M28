проблема визуализация социальный знание г.в. каныгин, м.с. полтинник социологический институт ран 1. введение быть считать, что каждый из мы мочь иметь свой представление в некоторый область знания. и перед каждый из мы рано или поздно возникать задача предъявить этот представление как сам себе, так и другой людям. один из современный направление решение этот задача являться графический изображение структура этот представление с помощь компьютера. цель статья – сформулировать предложение по совершенствование подобный инструмент с расчёт на неподготовленный пользователя. 2. метод визуализация представление пользователь пользователь современный компьютер мочь по-разному графически выражать свой представления. мы выделять четыре возможный способ и различать их, основываться на собственный опыт работа с компьютером, и иллюстрировать на пример известный программный средств. во-первых, пользователь мочь выразить свой мысль в вид картинка с помощь графический редактора. программа, например, paint позволить он рисовать с помощь различный инструмент – перо, заливка, геометрический фигура и др. во-вторых, если человек удаcться выразить свой суждение в вид функциональный зависимостей, то у он возникать возможность они визуализация с помощь средство деловой графика — диаграмм, графиков, таблиц. такой образ работает, например, excel. в-третьих, пользователь мочь следовать в свой размышление некоторый заранее определённый структурный схеме, который программа быть тут же отрисовывать в вид соответствовать графа. подобный способ «иллюстрирующей» работа хорошо знак пользователям, например, explorer windows. в этот программа применяться древовидный граф, с помощь который наглядно представляться связь между файлами, храниться на компьютере. назвать этот случай визуализация на основа предопределить структура или пс-визуализацией. в-четвертых, продвинуть пользователь мочь формализовать свой мысли, воспользоться язык спецификация в состав соответствовать инструментальный среды, пример который служить известный оболочка визуальный программирование — pascal, c и другие. выражать свой представление такой образом, пользователь неминуемо создать программный объект и отношение между ними. и на каждый этап этот программистский работа по она текущий результат среда дать возможность пользователь наглядно показать создавать они собственный представления, например, в вид граф соподчинённость сконструировать они программный объектов. назвать этот случай визуализация на основа спецификации. в последний случай пользователь прийтись приобрести некоторый квалификацию, позволять работать с современный программный оболочкой. однако затратить усилие позволить такой человек получить в свой распоряжение весь арсенал компьютерный способ визуализации. рассмотреть более подробно, как осуществляться работа пользователь по визуализация свой представление в два последний случаях. применение «предопределить структуры» означает, что в состав компьютерный программа входить структурный компонент, который мочь редактироваться пользователем. например, в explorer такой компонент оказываться граф тип дерево (tree graph). наряду с древовидный граф пользователь мочь визуально представить свой мысль с помощь другой предопределить структур, скажем, концептуальный карта (concept mapping) или сеть (network). так, разработчик один из программа концептуализация нечисловой информации, осуществлять с помощь аналитический единиц, называть кодами, предлагать они изображать в форма визуальный сеть (visual network view of code links and relationships) [1]. в любой случай предопределить структура составить из элементов, и пользователь предоставляться средство они редактирования. человек по свой усмотрение может, например, назначать новый узлы, давать они названия, устанавливать соподчинённость узел в вид отношение «родитель-дети», устанавливать связь между вершина один уровень и др. на каждый этап такой действие программа позволять человек видеть общий картина связей, который выражать он представление в некоторый область знания. основываться на этот общий картине, пользователь иметь возможность осуществлять дальнейший редактирование. как показывать опыт работа с файловый менеджерами, визуализация на основа предопределить структура оказываться естественный и наглядный для пользователя. и этот качество привлекать разработчик программа разный классов. например, создатель пакет анализ нечисловой информация (qualitative data analysis software), найти широкий применение в качественный социологии. с помощь этот пакет исследователь в условие интервьюирование небольшой группа респондент проводить концептуализация поставлять они речевой, текстовый или другой нечисловой информации. анализ инструмент пакет [2] показывает, что существенный роль в такой исследование играть визуализация с помощь предопределить структуры. такой способ визуализация логический структура оказываться в известный мера универсальным. это подтверждаться он широкий применение в случаях, когда приходиться выражать не представление отдельный лиц, а знание сообщество специалистов. для решение подобный задача в настоящий время активно разрабатываться метод управление знанием, в тот число большой распространение получить компьютерный реализация этот методов, известный под название онторедакторов. например, protege [3], hozo [4], intez [5]. не вызывать сомнения, что визуализация «предопределить структуры» позволять наглядно представлять знание независимо от предметный области, для который это знание разрабатывается. однако следовать подчеркнуть, что во-первых, такой наглядность достигаться цена кропотливый участие человека, который вынудить вручную редактировать структуру, предписать программой. во-вторых, в этот программа действие человека, осуществлять визуализацию, не контролироваться с помощь алгоритмический средств. скажем, работать в intez, пользователь мочь структурировать и одновременно визуально представить свой онтология в вид графа. однако процедура он работа принципиально не измениться по сравнение с explorer. она быть по-прежнему состоять в пошаговый редактирование структура графа, и не предполагать никакой проверок, например, того, как согласовать между себя разный область создавать человек графа. пользователь, если захотеть и сумеет, должный сам вручную согласовать интересовать он подструктуры. выразить тезисный особенность визуализация на основа предопределить структуры. представление отдельный пользователь мочь быть наглядно выразить с помощь предопределить структуры. «наглядно» означает, что пользователь получать воз-можность видеть общий картина связь между аналитический единица свой представлений, что он лишить в случае, например, изложение свой мысль на естественный языке. предопределить структура никак не контролировать «параметры» представлений, выражать с она помощью. человек непосредственно создавать элемент пс, программа лишь отрисовывать пс по совокупность действие человека. представление отдельный человек по некоторый сюжет не обязательно согласовать с представление другой человек по тот же сюжету. пс никак не позволять согласовать представление разный лиц. пс визуализация представление пользов-теля не использовать идея они разбиение на модуль с последующий «компиляцией» этот модулей. рассмотреть теперь второй способ визуализации, который назвать выше «основать на спецификации». этот случай легко представить, если вспомнить работа программиста, например, в среда объектно-ориентированный программирования. человек описывать свой представление о некий сюжет на язык спецификация в вид формально разрозненный программный объект (типов, форм, экземпляр и т. п.) и действие с ними. в такой форма он представление лишить наглядности, который быть обеспечить при пс визуализации. сложиться или нет этот формально описать объект и действие в единый исполняемый тело программы, определяться тем, насколько программмистский изложение согласовать с правило компиляции. в тот случае, если компиляция прошла, становиться возможный увидеть наглядный структура отношение между представление программмиста, выраженный на язык спецификации. тем самый визуализация осуществляться без непосредственный участие пользователя, но по результат он работа по создание текст спецификации. при такой способ визуализация соглашение и правила, который применяться при компиляции, оказываться инструмент контроль действие пользователь по выражение он представлений. вместе с тем один и тот же правило компиляция приложимый к действие каждый из пользователей, работать с один и тот же языковой спецификацией. наличие контроль за действие пользователя, который он выражать на формальный языке, и одинаковость средство такой контроль для каждый пользователь позволять мы различать представление и знание пользователя. различие между индивидуальный мнение и индивидуальный знание состоять в наличие или отсутствие правил, который ввести априори и согласно который человек структурировать свой мысли. фактически такой правило являться добровольный соглашениями, который брать на себя каждый из число лиц, действовать по программистский канонам. такой образом, применительно к проблема визуализация пользователь один и тот же сюжет или объекта, пс визуализация — это всегда выражение индивидуальный мнения. визуализация на язык спецификация всегда выражать знание пользователя. конечно, знание, формировать в вид спецификаций, существовать только для цель программирование и решать относительно ограниченный задача самоорганизация совместный действие программистов. однако принцип подобный организация знания, пусть существующий для ограниченный сфера специфический коллективный действий, представляться достойный перенесение в более широкий социальный контекст. тем более, что современный информационный общество возникнуть благодаря именно это принципам. модульный организация программа и основать на она правило компиляция являться привычный для программистский сообщества. использовать модули, программист избегать практика многократный создание один и тот же структура программы, или структура знания. в это процесс трудно переоценить компилируемость спецификация на основа предварительно ввести правил. компиляция реализовать проверка структура знания, который иметь ряд достоинств. во-первых, она делать конструктивный действие программмист по определение свой аналитический единица и отношение между ними. во-вторых, повышать ответственность за совершать действие и задавать «стандарт строгости». в-третьих, проверять формировать структура знание как в индивидуальный фаза её создание в вид отдельный программный модуля, так и коллективный фазе, когда объединяться часть программа в единый целое. резюмировать особенность визуализация на основа компиляции. компиляция являться способ проверка визуально представить знания, создавать отдельный пользователем, и метод согласование знаний, порождать коллективно. выражение представление пользователь осуществляться с помощь утверждение на язык спецификация и не отображаться непосредственно в вид воспринимать глаз картинки. тем самый формирование знание на язык спецификация не являться наглядным, т.к. разнести процесс создание знание и он алгоритмический визуальный репрезентации. наглядный картина возникать только в тот случае, если пользователь суметь выразить свой мысль согласно правило компиляции. работа с знание на язык спецификация требовать от пользователь квалификации, который он мочь приобрести только в результат специальный обучения. социальный знание и он визуализация представимый теперь ситуацию, при который знание создаваться не команда программистов, а сообщество рядовой граждан. такой знание назвать социальный знанием. быть считать, что создатель подобный знание являться разнообразный акторы, в число который входить орган управления, государственный структуры, общественный организации, отдельный граждане. социальный знание характеризовать гигантский объём информации, конструируемость знание участник социальный коммуникации, разнообразие представление о один и тот же событие у разный граждан, неподготовленность пользователь к применение какой-либо специиальный средство управление знанием. этот особенность создавать проблемы, решение который невозможно без расширение инструментальный возможность существующий средство управление знанием. отличительный черта социальный знание в сравнение с он аналогом, создавать с помощь формальный спецификаций, являться неподготовленность пользователь к применение какой-либо специальный средство управление знанием. поэтому мы стремиться разработать инструментальный средства, позволять расширить включённость рядовой гражданин в процесс социальный управления. сочетание наглядный визуальный представление социальный знание и возможность проверка он логический непротиворечивость в процесс коллективный создание казаться мы необходимый условие широкий прикладной применение информационно-аналитический средство в область социология управления. иметься в современный приложение метод визуализация знаний, подразделить мы выше на два случай или группы, не удовлетворять это условие и, следовательно, не смочь мы помочь при формирование знания, создавать коллектив рядовой граждан. действительно, если применять пс визуализация знания, то, возможно, результат быть наглядный для сам человека, но не обозрим, а значит, не проверять при скольконибудь значительный объём графически выраженный представлений. ситуация только усугубиться, если актор знание оказаться сообщество лиц. если обратиться к метод визуализация на основа спецификации, то знание быть проверяемо, но практически не реализуемо. из-за того, что: вопервых, сообщество специалист в принцип не мочь адекватно представлять сообщество рядовой граждан. во-вторых, мы не мочь рассчитывать на то, что рядовой гражданин вдруг стать профессиональный программистами. мы полагаем, что специфицировать знание, т.е. формально определять тип объектов, экземпляры, фрэйм и другой аналитический единицы, равно как и отношение между ними, следовать непосредственно в вид структур. этот структура должный быть компилируемы. другой словами, так же как в языковой спецификации, построить на идея модульности, в она структурный аналог должный существовать базовый «структуры-блоки» или элементарный структуры. назвать они визуальный модули. кроме того, должный существовать правило компиляция (соглашение по сборка или агрегировать правила), который позволять бы непосредственно из визуальный модуль получать агрегированный представления, например, в вид граф аналогично тому, как в структурный программирование компилятор из модуль собирать исполняемый программу. такой подход в принцип приводить к следующий картине. знание создаваться коллективно сообщество социальный актор (законодателей, специалистов, граждан, орган управление и т.п.). каждый актор формировать свой фрагмент знание непосредственно в вид интуитивно понятный элементарный структур, основать на естественный обозначениях. подход предусматривать правило компиляция этот структур, позволять объединять они в конфигурация сообразно задаче, решать соответствовать сообществом. тем самым, давать возможность сообщество актор проверять связность знание как на этап он индивидуальный создания, так на фаза согласование фрагментов, создать отдельный акторами. практический применение это подход в задача социальный управления, во-первых, позволять повысить включённость в процесс создание знание разнообразный социальный актор (законодателей, специалистов, граждан, орган управление и т.п.), во-вторых, повышать ответственность каждый из актор за свой социальный действия. в добавление отметим, что высказать соображение позволять решить проблема «бутылочный горлышка», возникать как раз на фаза применение существующий онтологический метод управление знанием. быть проблема в том, что не ясно, кто и как смочь «наполнить» формально специфицировать онтология [6]. в случай социальный знания, создавать сам актор с помощь визуально-структурный средств, этот актор оказываются, во-первых, «дееспособными» без специальный обучения; вовторых, стимулировать к такой создание сам социальный коммуникацией. заключение реализация описать идея мы разрабатывать в вид компьютерный модель социальный знания. обязательный условие наш разработка являться интуитивный понятность и наглядность для рядовой пользователь базовый структурный объектов, лежать в основа весь программный реализации. мы надеемся, что проводить разработка позволить мы понять, как работать метод управление знанием, в который соглашение по компиляция задаваться не в вид языковой спецификаций, а с помощь правил, термы который являться структуры, например, графы.