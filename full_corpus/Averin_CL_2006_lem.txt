а.н. аверин разработка сервис поиск биграмм 1. вводный замечание биграмм быть называть два слова, который в тот или иной текст (корпус текстов) являться соседними. такой образом, биграмм являться как двухсловный словосочетания, так и любой два слова, расположить рядом в некоторый тексте. простой набор биграмм из корпус текст никакой самостоятельный лингвистический ценность не имеет. однако частотный биграмм находить свой применение: • при снятие морфологический и лексический неоднозначность (в тот число в машинный перевод для выбор перевод слова); • при построение словарь сочетаний; • при выявление фразеологизмов; • при оптимизация веб-сайтов. 2. способ ранжирование биграмм для лингвистический исследование мочь быть полезный только упорядочить набор биграмм. при это существовать довольно много численный параметров, по который можно ранжировать массив биграмм: 1) частота первый слова; 2) частота второй слова; 3) различный мера устойчивость биграммы, который учитывать частота оба слов: a) mutual information (mi); b) mi3; c) log-log; d) log-likelihood; e) t-score; f) z-score. описание и сравнение привести мера устойчивость не входить в задача автор . тем не менее, необходимо сказать несколько слово о частота взаимный информация (mutual information) как о наиболее «популярном» средство измерение устойчивость биграммы. ввести следующий обозначения: mi – объём взаимный информации, n1 и n2 – первый и второе слово биграммы, f(n1, n2) – частота встречаемость слово n1 и n2, идти подряд в корпус текстов, f(n1), f(n2) – частота отдельный слово n1 и n2 в корпусе, n – число словоформа в корпусе. тогда частота взаимный информация для словоформа n1 и n2 в данный корпус текст быть вычисляться по следующий формуле: дать формула становиться неинформативной, когда составлять биграмм сравнительно редко встречаться в корпус отдельно друг от друга. в это случай f(n1, n2)  f(n1)  f(n2) и mi быть тем больше, чем маленький частота биграммы. максимальный значение мера mi достигаться при частота биграммы, равный 1. чтобы избежать такой поведение при малый частотах, можно использовать мера устойчивость mi3, который отличаться от mi тем, что частота биграмм возвести в куб: для решение привести в сам начало статья лингвистический задача требоваться строить и исследовать (автоматически или вручную) не всё биграмм из текста/корпус текстов, а только тот из них, который содержать интересовать слово. поэтому часто говорить не просто о биграммах, а о биграмм для конкретный слов. 3. программный средство для поиск биграмм лингвистический значимость набор биграмм тем выше, чем большой объём текстов, на основа который они построены. в этот связь интерес представлять такой программный средства, который позволять получить результат о степень устойчивость биграмм удаленно, без необходимость иметь на рабочий компьютер сам корпус текстов. в это смысл самый удобный вариант – хранение на интернет-сервер как сам корпус текстов, так и весь средств, необходимый для получение биграмм для слова. у интернет-сервис поиск биграмм есть следующий преимущества: 1) нет необходимость хранить локально сам корпус текстов; 2) не требоваться установка какой бы то ни быть специальный программ. тем не менее, такой вариант накладывать весьма жёсткий временной требование на построение список биграмм по запрос пользователя. особенно это актуально при использование корпус большой объём (а только такой корпус и подходить для обеспечение статистический достоверность результат ранжирование биграмм). мы быть произвести исследование сервис поиск биграмм, доступный в сеть интернет и открытый для общий использования. быть протестированы, в частности, следующий сервис поиск биграмм: • dwds (das digitale wörterbuch der deutschen sprache) – немецкий язык; • cobuild concordance and collocations sampler – английский язык; • bigram plus – английский язык; • yandex direct – русский язык. после такой исследование быть сделать следующий выводы: 1) сервис поиск биграмм, иметь свободный доступ через интернет, достаточно мало – по 1–2 для рассмотреть языков; 2) для русский язык быть найти лишь один такой сервис, причём круг задач, в который он можно использовать, весьма ограничен. на основа этот вывод быть принять решение разработать сервис поиск биграмм с следующий характеристиками: 1) свободный доступ к сервис через интернет; 2) корпус текст большой объема; 3) текст корпус – русскоязычные; 4) быстрый выдача результат на запрос пользователя; 5) наличие в сервис морфологический компонент (поиск биграмм для лексем, а не для словоформ). сервис, удовлетворять описать требованиям, быть разработать в соавторство с а.в. сокирко (г. москва) и доступный на сайт www.aot.ru (страница www.aot.ru/demo/bigrams.html). 4. сервис поиск биграмм aot: описание адрес в сеть интернет: http://www.aot.ru/demo/bigrams.html объём корпус текстов: 448 млн словоформ. язык корпуса: русский. время построение страница результат запроса: 8 сек. задавать параметр поиска: • один из два слово биграмм (ключевой слово); • расположение ключевой слово на первой/втор позиция в биграмме; • пороговый значение частота биграмм (по умолчание 2). доступный вариант ранжирование результатов: • частота биграммы; • частота коллокат (т.е. второй слово биграммы); • мера mutual information; в качество корпус текст использовать текстовый база библиотека максим мошкова. пример первый пять строка таблица для ключевой слово стол привести в табл. 1: таблица 1. результат поиск по запрос стол поиск ключевой слово в корпус производиться в весь он грамматический формах. для каждый биграмм есть возможность просмотр контекст из корпуса. при это выводиться название произведения, автор и фрагмент текста, включать биграмму: анна арнольдович антоновская. 3. время освежать дождь длинный стол уставить красивый кувшинами, полный благоухать роз. степан павлович злобин. 2. степан разин стол уставить - аж протопопица ахнула. илья ильф и евгений петров. рассказ за стол сидеть чистенький старички, у весь под борода салфеточки, стол уставить разный едой, никакой нет порций, брать что хочешь, понимаете, хватать что хочешь. гюстать флобер. саламбо вслед за тем стол уставить мясной блюдами. … 5. сервис поиск биграмм aot: описание алгоритм в этот часть статья приводиться описание алгоритма, лежать в основа создать сервис поиск биграмм. при проектирование сервис мы исходить из того, что корпус текст являться статическим. быть два основный требования: 1) поиск должный вестись минимум времени; 2) всё компонент сервис должный занимать в оперативный память сервер не большой 100 мб. разработка сервис можно разделить на три части: 1) предобработка исходный текст корпус (производиться один раз): на сервер выкладываться результат предобработки, который в дальнейший не подвергаться изменениям; 2) обеспечение работа сервис в реальный времени: поиск биграмм для задать пользователь слово в корпусе, использовать файл предобработки; 3) пользовательский интерфейс. 5.1. предобработка текст корпус корпус текст сервис представлять себя всё художественный произведение библиотека максим мошково на 2003 год. предобработка состоять из следующий этап (все этап автоматизированы): 1) объединение весь текст произведение библиотека в один файл corpusbase.txt . 2) построение из файл corpusbase.txt инвертировать список лексема и сохранение он в файл baseindex.txt. такой образ в файл baseindex.txt в алфавитный порядок записываться всё лексема из corpusbase.txt с список позиция в файл corpusbase.txt, откуда начинаться вхождение данный слова. файл baseindex.txt использоваться при оптимизация построение страница с контекст для биграммы. 3) построение файл биграмм bigrams.txt. для это файл corpusbase.txt считываться по предложениям. слово предложение записываться в файл bigrams.txt по два в строка (т.е. из n-словный предложение создаваться n – 1 биграмм). при это также производиться лемматизация словоформ. привести фрагмент получать на данный этап файл bigrams.txt: он неизменно неизменно подкрепляться подкрепляться бокал бокал отличный отличный хокхеймер 4) файл bigrams.txt сортироваться по алфавиту. каждый биграмм приписываться она частота (по умолчание 1). если при сортировка обнаруживаться множественный вхождение один биграммы, то проделываться следующий операции: • каждый вхождение биграмм кроме первый удаляется; • у первый вхождение инкрементироваться частота. в это же файл каждый слово биграмм приписываться он частота в исходный корпус текстов. 5) считаться частота взаимный информация (mutual information) для каждый биграммы. получить значение также записываться в строка с биграммой. в результат строка файл bigrams.txt принимать следующий вид (на пример биграмм он неизменно): он неизменно 32 203089 27704 2,521345 здесь • 32 – число вхождение биграмм в корпус; • 203089 27704 – частота слово он и неизменно в исходный корпусе; • 2,521345 – мера mutual information. 6) теперь простой весь быть бы считать на сервер информация из это файл в некоторый структура дать и далее по запрос пользователь выдавать биграмм и дополнительный информация о она из этот структуры. но размер файл bigrams.txt для использовать корпус текст превышать 500 мб, а на использовать сервер свободный оперативный память – 100 мб. кроме того, даже если бы свободный память быть бы большой 500 мб – такой эксплуатация оз неоправданна. быть принять другой решение. для файл bigrams.txt быть создан, как и для исходный файл corpusbase.txt, инвертировать индекс bigrindex.txt, в который быть записать всё лемма из bigrams.txt (в алфавитный порядке) с список позиция в файл bigrams.txt, откуда начинаться вхождение дать леммы. размер такой файл быть менее 100 мб, поэтому информация из он можно быть хранить в оперативный память сервера. 5.2. обеспечение работа сервис в реальный время на жёсткий диск сервер быть положить файл corpusbase.txt, baseindex.txt, bigrams.txt и bigrindex.txt. содержимое файл bigrindex.txt каждый раз при запуск сервис загружаться в оз в массив структура sterm, каждый из который содержит: 1) слово, входящий в один из биграмм корпуса; 2) массив смещение вхождение биграмм с это слово в файл bigrams.txt. предположим, пользователь запрашивать биграмм для некоторый ключевой слово w. в это случай система работать следующий образом: 1) по массив структура sterm, находиться в оперативный память сервера, осуществляться бинарный поиск слово w; 2) при отсутствие такой слово пользователь предлагаться ввести другой слово; если же слово нашлось, считываться массив смещение для него; 3) в соответствие с получить смещение считываться нужный строка файл bigrams.txt; для каждый строка производиться следующий действия: a) считывание биграммы, она частоты, частота оба слово в корпус и значение mi; b) производиться проверка того, что частота биграмм большой или равный задать пользователь пороговый значение (по умолчание 2). также проверяется, что позиция ключевой слово в найти биграмм соответствовать задать пользователь значение (первое либо второе слово биграммы). если биграмм не удовлетворять хотя бы один из этот условий, то она пропускается. иначе – считать для биграмм информация записываться в массив строк, предназначить для выдача пользователю. 4) выдача пользователь результатов. при нажатие на кнопка «контекст» для требовать биграмм осуществляться бинарный поиск она составлять по файл baseindex.txt (представлять себя инвертировать индекс для файл corpusbase.txt). оттуда считываться смещение в корпус для предложение с этот биграммой. затем производиться непосредственно считывание предложение из файл corpusbase.txt и вывод они в итоговый таблица в документ html. в раздел 5.1 и 5.2. наш статья быть рассмотреть два аспект разработка сервис поиск биграмм, расположить на сайт www.aot.ru: • предобработка текст корпуса; • обеспечение работа сервис в реальный времени. третий аспект (пользовательский интерфейс) выходить за рамка лингвистики, поэтому в дать работа он не описывается.