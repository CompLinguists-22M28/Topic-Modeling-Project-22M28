Интеграция инструментов и сервисов для оценки вебинтерфейсов пользователя и выявления юзабилити рисков
Н.А. Перминов, М.А. Бакаев
Новосибирский государственный технический университет
1. Введение
В данной работе рассматриваются веб-интерфейсы, относящиеся к разновидности
пользовательских интерфейсов. Последние представляют собой совокупность средств и
методов для взаимодействия пользователя с вычислительными устройствами. Такая связь
в информационной среде, проникнувшая во все сферы деятельности и ставшая
обязательным атрибутом общества, является неотъемлемой частью любого современного
человека. Поэтому сегодня правительства разных стран вводят на всех уровнях процессы
цифровизации, переход на цифровой способ связи, записи и передачи данных. Таковым
является и Россия, где с лета 2017 года осуществляется программа «Цифровая экономика»
[4]. Таким образом, количество пользовательских интерфейсов с каждым годом неуклонно
увеличивается. В качестве подтверждения обратимся к статистическому агентству Internet
Live Stats [5], предоставляющие информацию для таких компаний, как BBC News, United
Nations Conference Rio+20, U2, Wired, Kaspersky Lab и так далее. Ниже приведена
динамика роста веб-сайтов во всём мире по данным агентства (см. рис. 1).
Так, согласно Internet Live Stats, их количество в 2017 году выросло на 69% по
сравнению с предыдущим годом. Да и в целом, отчётливо прослеживается динамика
роста. Всё это говорит о наличии огромного спроса на веб-интерфейсы, а значит, и
качество взаимодействия с ними приобретает огромное значение. В связи с этим
существует необходимость в оценке пользовательского опыта.
Данная работа сосредоточена именно на концептуализации оценки веб-интерфейсов. В
представленной области Тим Брей предпринял одну из первых попыток провести
глобальные измерения Интернета в 1996 году [1]. Тогда были сформированы первые
атрибуты: размер Интернета, его возможности подключения, видимость сайтов и
распределение форматов. Сегодня количество атрибутов и метрик значительно выросло.
Однако из данного утверждения следует проблема сложности проверки такого количества
метрик, которые влияют на наблюдаемые ими атрибуты. Следовательно, появилась
необходимость отбора набора метрик, которые обеспечивают более глубокое понимание
аудитории в целом, а также отдельных пользователей с разных точек зрения. Ведущей
международной организацией в этом вопросе является W3C (World Wide Web Consortium),
занимающаяся стандартизацией веб-пространства. Одним из важных стандартов является
WCAG [2], представленный 5 мая 1999 года. Особая значимость данного документа
заключается в том, что он, в версии от 11 декабря 2008 года, был принят ISO
(Международная организация по стандартизации) в октябре 2012 года [2]. Количество
методов, описанных в нём, переваливает за сотни, что делает практически невозможным
проверку вручную, ведя нас к необходимости автоматизации. В связи с этим W3C
предоставляет список различных инструментов для оценки атрибутов качества [3].
Например, доступность или валидность HTML/CSS. На данный момент их количество уже
также превысило сотню, при этом ни один их них не является универсальным, что не
упрощает задачу.
С учётом вышеизложенного, предлагается создание платформы для объединения
вышеупомянутых сервисов и инструментов в единую обновляемую базу знаний. Данная
система знаний нужна для решения сложной задачи, а потому требует структурирования
предметной области. В таком случае необходима онтология, которая может быть
использована сторонними разработчиками, её описание представлено в статье.
Уникальность данного решения заключается в предложении модифицирования уже
существующего пласта веб-интерфейсов с использованием семантических технологий.
Последние примечательно тем, что большинство научного сообщества заявляет об его
огромном потенциале, обозначая его как один из этапов смены парадигмы в вебпространстве. Однако разработок в данной области весьма мало и пополняется за счёт
энтузиастов.
Остальная часть статьи организована следующим образом: в разделе 2
рассматриваются базовые знания представленного исследования: концепция интерфейса,
его атрибуты и существующие методы оценки, включая упомянутую WCAG, и понятие
онтологии. Раздел 3 иллюстрирует создание предлагаемой базы знаний. Последний раздел
содержит выводы о проделанной работе.
2. Определения и подходы
2.1. Веб-интерфейс и его структура
Веб-интерфейс – пользовательский интерфейс (Interface) для взаимодействия с
сервисом или устройством посредствам протокола HTTP. Согласно [6], целями данного
процесса является: предоставление информации пользователю и обеспечение
взаимодействия с системой. Исходя из этого, процесс создания интерфейсов делится на
два этапа:
— Опыт взаимодействия (User experience, UX) – формирует взаимодействие;
— Пользовательский интерфейс (User interface, UI) – визуализирует или материализует
взаимодействие.
Подходы к реализация самого интерфейса огромное множество, вызвано это
множеством методик и инструментов производства, а также и технических особенностей
устройств и систем. Поэтому каждый такой процесс индивидуален и строится от нужд
проекта. Однако все они вписываются в концептуальную модель Джесси Джеймса
Гарретта [7], раскрывая основную структуру любого интерфейса. Она состоит из
следующих элементов: стратегия (Strategy), рамки (Scope), структура (Structure),
компоновку (Composition) и поверхность (Surface). Рассмотрим подробнее каждый аспект.
Стратегия (Strategy). Являются сущность самого интерфейса, которая определяется
следующими двумя критериями:
— Желания пользователя – это то, как конечный пользователь видит решение задачи;
— Цели – результат взаимодействия.
Рамки (Scope). Представляет собой список понятий или, более точно, словарь
сущностей и отношений. Которым оперирует интерфейс, тем самым формируя доступную
пользователю функциональность и устанавливая границы возможностей.
Структура (Structure). Включает в себя логику интерфейса, его представление и
методы взаимодействия. То есть навигацию между информацией. Все это определяет
удобство использования (Usability).
Компоновка (Composition). Переводит логическую структуру в макет
пользовательского интерфейса, решая вопросы наиболее эффективного расположения
различных элементов. В этом помогает информативный дизайн, который включает в себя
три аспекта:
— Релевантность – насколько актуальна информация;
— Организация – навигация по информации;
— Логика – связи между информацией.
Поверхность (Surface) подразумевает графический дизайн. Он формирует
окончательный внешний вид продукта, как элементы будут выглядеть и ощущаться с
точки зрения пользователя. Например, в программе – фон, текст, кнопки, поля ввода и
тому подобное, а в ноутбуке – клавиатура, сенсорная панель, корпус и так далее. Все это
определяется исходя из общих тенденций или предпочтений самого пользователя.
2.2. Атрибуты и метрики
Сперва дадим определение двум ключевым терминам, используя кембриджский
словарь:
— Атрибуты (Attribute) – качество или характеристика кого-либо, чего-либо (в нашем
случае для интерфейса);
— Веб-метрики (Metric) – набор нормативов для измерения того, насколько успешен вебсайт.
Как видно из определений, второе служит для формирования первого. А последнее уже
даёт точную характеристику. Сегодня количество атрибутов, а также метрик значительно
выросло. Как упоминалось ранее, из этого следует проблема сложности проверки такого
количества метрик, влияющие на наблюдаемые ими атрибуты. Однако, это не
единственная задача, необходимо проводить корреляцию между ними. Следовательно, в
дополнение к автоматизации процесса необходимо отобрать набор метрик, которые
обеспечивают более глубокое понимание аудитории в целом, а также отдельных
пользователей с разных точек зрения. Решая данные вопросы, многие исследователи [1, 8,
9] выделяют две основные группы метрик на основе подхода анализа:
— Анализ кода (Webpage code analysis) – основан на анализе исходного кода вебстраницы;
— Визуальный анализ (Screenshot analysis) – заключается в анализе созданного снимка
пользовательского интерфейса.
В данном исследовании будет проведён дальнейший разбор, отталкиваясь от
представленных групп.
2.3. Технологии онтологий
В информатике онтология – это всесторонняя и детальная формализация определенной
области знаний с использованием концептуальной схемы. Как правило, такая схема
состоит из структуры данных, содержащей все соответствующие классы объектов, их
отношения и правила, принятые в этой области.
Таким образом, онтологии классифицируются следующим образом:
— Метаонтология – содержит общие понятия и отношения, не зависящие от предметной
области («объект», «свойство», «значение» и т.п.);
— Предметная онтология – содержит понятия, описывающие конкретную предметную
область и отношения, семантически значимые для данной предметной области;
— Онтология задач (и методов) – содержит в качестве понятий типы решаемых задач, а
отношения специфицируют декомпозицию задач на подзадачи;
— Прикладная онтология (онтология приложения) – описывает концепты, зависящие как
от предметной области, так и от задач;
— Сетевая онтология – используется для описания конечных результатов действий,
выполняемых объектами предметной области или задачи.
В данной исследовательской работе описана прикладная онтология. Поскольку целью
проекта является разработка веб-платформы, будет уместно воспользоваться языком,
основанным на веб-стандартах. Представителей данной категории достаточно много:
UPML, DAML, OIL, XODL, XML, RDF, RDFS и OWL. Последний является стандартом
W3C, уже ранее упомянутой. Вдобавок, его основное назначение – представление
информации человеку и её обработка. А это характерно для приложений подобных тому,
что планируется реализовать.
OWL – это язык семантической разметки на основе XML, разработанный W3C. Он
содержит классы, объекты и свойства, которые соответствуют понятиям, экземплярам и
ролям в онтологии. Классы предоставляют механизм абстракции с похожими
характеристиками, и каждый класс связан с набором индивидуумов. Существует три типа
свойств: объект, тип данных и свойства аннотации. Первый представляет семантические
отношения между объектами, второй связывает их со значениями данных, а последний
указывает на дополнительные примечания.
Согласно спецификациям W3C, OWL (подразумевается текущая версия языка – OWL
2) имеет две семантики, обеспечивающие альтернативные способы присвоения значений:
OWL DL и OWL Full. Наиболее популярной версией является OWL DL, где DL обозначает
Description Logic (DL), которая является разрешимой частью логики первого порядка.
Следовательно, вывод онтологии OWL может быть обработан с помощью рассуждений
DL. В качестве редактора онтологии используется Protégé 5.5.0-beta-4.
3. Анализ и результаты
3.1. Понятия и взаимосвязи
Как уже упоминалось выше, основными понятиями создаваемой онтологии являются
интерфейс (Interface), пользовательский интерфейс (UI), пользовательский опыт (UX),
атрибуты (Attribute), метрика (Metric) и сервис (Service). Связи между ними следующие
(см. рис. 2)
Помимо иерархических связей, которые вы можете наблюдать на рисунке 2 в виде
прямых, присутствуют «определительные» (Has Define), изображены пунктирными
линиями. Они созданы для отображения влияния одного объекта на другой, исключая
иерархических отношения. Рассмотрим каждую из них:
— Взаимосвязь «Метрика» (Metric) и «Атрибут» (Attribute). Здесь выражена прямая
зависимость одного класса от другого. Без каких-либо измерений довольно сложно
говорить объективно о характеристике;
— «Атрибут» (Attribute) и «Интерфейс» (Interface). Атрибуты в общем определяют
представление интерфейса, характеризуют его. Именно они помогают оценить
качественно;
— Интерфейс (Interface) и UX, UI. Как упоминалось выше, пользовательский интерфейс
(UI) и пользовательский опыт (UX) не являются интерфейсом (Interface).
Следовательно, иерархических отношений с последним не может быть. Однако они
непосредственно играют роль в его формировании. Более того, интерфейс, в свою
очередь, влияет на улучшение методов UX и UI.
3.2. Атрибуты
Изучив статьи [1, 8, 9] и существующие сервисы [3], был определён следующий список
атрибутов (Attribute) (см. рис. 3)
Подбор атрибутов проводился в три этапа:
— Выбор часто упоминаемых и используемых сервисов;
— Фильтрация по отзывам и мнениям экспертов и стандартов (Например, WCAG) в этой
области;
— Окончательное формирование списков на основе проведенных исследований.
Для ясности рассмотрим каждый выбранный атрибут, где порядок будет
соответствовать делению на стадии процесса производства интерфейса, отображаемому в
онтологии, на UX и UI (технический и визуальный).
Доступность (Accessibility) [1, 8 – 10, 12, 15] – предоставление услуг всем
пользователям, включая тех, кто имеет какие-либо физические ограничения, такие как
потеря слуха, нарушение зрения, движения или обучения. Одна из самых необходимых
характеристик пользовательского интерфейса помогает создателю продукта понимать
различные категории пользователей. Кроме того, здесь важно подчеркнуть, что этот
атрибут способствует созданию доступных сервисов для людей не только с физическими
ограничениями, но и с техническими. Такие как медленный интернет, устаревшая
программная часть, плохое техническое оснащение, небольшие разрешения устройств для
вывода и так далее. Важность этого атрибута подчеркивают существующие
международные стандарты, включая ранее упомянутый WCAG.
Надёжность (Reliability) [1, 8, 9, 12] – доверие пользователей к предоставленному
продукту. Особенно распространенный атрибут в последнее время из-за участившихся
утечек персональной информации и электронного мошенничества. Сегодня пользователи
стали более тщательно выбирать сервисы, которые они будут использовать. Поэтому
разработчики должны учитывать, насколько безопасен их продукт. Но также, как бы
парадоксально это ни звучало, открыт для пользователей. Они должны видеть логику
взаимодействия, насколько это возможно. Знать когда и почему выполняется та или иная
операция.
Желаемость (Desirability) [1, 6, 8 – 10] – выражается в дизайне через брэндинг, имидж,
индивидуальность, эстетику и эмоциональный дизайн. Атрибут некоторое время носил
звание самой субъективной характеристики, хотя и не отменяя собственной важности. В
качестве примера можно привести индустрию смартфонов, в которой первенство среди
самых привлекательных устройств долгое время занимал iPhone, что делало его самым
продаваемым. Однако сегодня благодаря большим объемам данных и нейронным сетям,
способным обрабатывать первое, существуют метрики, определяющие желанность
продукта. Так, возвращаясь к примеру, можно заметить, как китайский рынок в целом, и в
частности Huawei, свободно конкурирует с Apple.
Обнаруживаемость (Searchability) [8, 9] – легко доступны, а в случае цифровых и
информационных продуктов их содержимое должно быть легко находимым. Включает в
себя множество метрик, которые сформировали целую отрасль (SEO, Search Engine
Optimization). Благодаря чему пользуется огромной популярностью и является едва ли не
единственным атрибутом для веб-интерфейсов у некоторых компаний. Это выражается в
борьбе за места в строке результатов поисковых систем. Поскольку большинство
пользователей не рассматривают варианты за пределами первой страницы. Следовательно,
значимость данного атрибута по-прежнему велика.
Удобство (Usability) [1, 6 – 15] – количество усилий, необходимых для использования
системы. Является фундаментальным. Атрибут непосредственно оценивает логику
взаимодействия с продуктом. Насколько эффективно и быстро решается поставленная
задача. В качестве примера посмотрим на формы регистрации. Их функция – авторизовать
пользователя в системе. В данном случае атрибут характеризует соотношение
достаточности собранной информации и количество шагов для успешного выполнения
операции.
Полезность (Usefulness) [1, 10, 14] – минимальный набор функций, необходимый для
удовлетворения заявленных или подразумеваемых потребностей. Оценка общего
результата взаимодействия пользователя с веб-интерфейсом. Второй фундаментальный
атрибут. В отличие от предыдущего атрибута, ставится вопрос: «Решил ли пользователь
свою задачу?». То есть характеризуется конечный результат работы с предметом.
Возвращаясь к формам регистрации. Для данного атрибута главным вопросом будет:
«Действительно ли пользователю необходимо было авторизоваться для достижения
цели?».
Чистота (Clarity) [8, 15] – визуальная и слуховая нагрузка на пользователя. Должно
быть достаточно места для маневров. Таким образом, элементы должны быть
расположены на большом расстоянии друг от друга, сводя к минимуму случайные
срабатывания и визуальную нагрузку. Для лучшего понимания помните: «Ваш интерфейс
– это ваш рабочий стол». Минимум отвлекающих элементов и максимум свободного
пространства.
Последовательность (Consistency) [7, 10, 13] – логика взаимодействия с
пользователем. Требует использования стандартных методов для выполнения операций,
используемых на протяжение всего интерфейса. Если говорить о веб-интерфейсах,
придерживайтесь не более трех шаблонов страниц. Чем их больше, тем больше
пользователю придется запоминать и разбирать. А это дополнительное время для
освоения. То есть структура страниц должна быть похожа функционально и визуально.
Примером может служить данная статья. Страницы выполнены в едином стиле, вы не
задумываетесь как читать следующую.
Близость (Familiarity) [8, 13] – распознавание элементов и методов интерфейса. Когда
мы знакомы с чем-то, мы знаем, чего ожидать. У нас нет необходимости думать о том, что
делать дальше. Дополняет предыдущий атрибут. Если вам не удаётся придерживаться в
рамках трёх шаблонов, следуйте стандартным методам и общим практикам. Вернёмся к
примеру со статьей. Если вам нужно посмотреть список литературы, вы, скорее всего,
сразу перейдёте в конец, поскольку это уже устоявшиеся правило.
Отзывчивость (Responsiveness) [8] – скорость загрузки элементов и наличие
визуальных или звуковых индикаторов. Этот атрибут становится все более актуальным в
последнее время на фоне быстро растущих мощностей технологий. Действительно, сейчас
даже слабые, по современным меркам, устройства способны выполнять огромное
количество операций в секунду. Но, тем не менее, не забывайте о различных факторах,
которые могут повлиять на производительность. Такие, как качество подключения к
глобальной сети или параллельные задачи. Оптимизацию никто и никогда не отменял.
Простота (Simplicity) [8] – простота элементов. Дополняет атрибут «Чистота» (Clarity).
Последнее время очень явно проявляется в дизайне современных интерфейсов,
характеризуемый пользователями как минимализм. Содержит минимальное количество
элементов, выбранных по принципу необходимости. Примером является то же рабочее
пространство, на нем должны быть расположены только первостепенные элементы.
Визуальная иерархия (Visual hierarchy) [8, 10] – это контраст между различными
размерами, цветами и расположением элементов. Это способствует созданию единого
стиля и решает вопросы навигации, с помощью визуального выделения в блоки. Также
используются цветовые решения, устанавливающие контраст. Атрибут обычно описывает
способность разработчиков контролировать фокус внимания пользователя.
3.3. Метрики
Как было описано ранее, существует множество метрик, и перечислять каждую из них
нецелесообразно. Поэтому, для удобства структурирования и изложения, они были
объедены в пять больших категорий, одна из которых включает юзабилити риски
(Convenience) (см. рис. 4).
Производительность (Performance) – важно обеспечить хороший пользовательский
опыт и снизить показатель отказов.
Безопасность (Security) – важно убедиться, что ваш сайт защищает персональные
пользовательские данные. А именно, во время выполнения операций не подвергает их
риску кражи или потери.
SEO (Search engine optimization) – способы убедиться, что адрес веб-сайта
отображается в верхней части списка результатов поиска в Интернете.
Социальность (Sociality) – важен для общения с клиентами, узнаваемости бренда и в
качестве маркетингового канала для привлечения посетителей на вашу платформу.
Удобство (Convenience) – важно максимально увеличить доступную аудиторию и
свести к минимуму количество отказов пользователей (что может косвенно повлиять на
ваш рейтинг в поисковых системах).
Все представленные категории достаточно объёмные. Следовательно, было бы не
целесообразно предоставить весь список метрик для каждой группы. В связи с этим
рассмотрим один из них, остальные можно найти непосредственно в онтологии. (см. табл. 1)
3.4. Сервисы
Последний, но не менее важный класс созданной онтологии – «Сервис» (Service). Он
хранит список инструментов, которые были проанализированы и закреплены к метрикам.
Каждый из них обладает следующими свойствами:
— Автор (Author) – разработчик инструмента;
— Язык (Language) – список поддерживаемых языков;
— Поддерживаемый формат (Supported format) – поддерживаемые форматы для
обработки;
— Тип сервиса (Type of service) – онлайн сервис, расширение, desktop приложение;
— Лицензия (License) – Бесплатное / Платное / Свободно распространяемое;
— Метрика (Metric) – список используемых метрик.
В качестве примера, несколько сервисов приведено в таблице 2
4. Заключение
В ходе представленного исследования была изучена проблема оценки веб-интерфейсов
пользователя и выявления юзабилити рисков, заключающаяся в существование огромного
количества метрик и инструментов. Что, в свою очередь, ведёт к огромным затратам на
весь процесс измерения по отношению к человеческим и временным ресурсам, а значит
необходим ввод эффективной автоматизации.
Результатом проделанной работы стало определение наиболее полезных метрик для
оценки веб-пользовательских интерфейсов и выявления рисков юзабилити, с
последующей их классификации и оформлением в онтологию. Где, помимо отобранных
метрик, также были выделены атрибуты и сформировано базовое представление об
интерфейсах и его компонентах.
Итогом исследования стала вышеописанная онтология. Мы рассчитываем, что данный
проект подержат сторонние разработчики и исследователи в области пользовательских
интерфейсов, начав применять его. Так как считаем, что у данной онтологии есть
огромный потенциал. Она может служить обучающим инструментов в понимании
интерфейсов в общем и пользовательских в частности. Хотя и осознаём, что в данный
момент онтология находиться не в финальной стадии и требует усовершенствований.
Тем не менее, мы собираемся и дальше развивать этот проект, так как цель наших
будущих исследований – создать готовый программный продукт, сочетающий в себе
существующий набор услуг. Видим в нём открытую платформу для оценивания качества
исполнения веб-сайтов, которой могут воспользоваться все желающие: от небольших
команд разработчиков, где недостаточно средств для экспертной оценки, до крупных
компаний, где нужно провести тестовую оценку в короткий срок. Наша глобальная цель –
улучшение качества предоставления информации, сделав доступ к ней удобным и
приятным для всех людей. Более локальная задача – приблизить российский сегмент
глобальной сети до европейского уровня. Описание текущей версии нашей платформы
измерения пользовательских веб-интерфейсов, для которой разработанная онтология
будет служить структурой базы знаний, можно найти в [10].