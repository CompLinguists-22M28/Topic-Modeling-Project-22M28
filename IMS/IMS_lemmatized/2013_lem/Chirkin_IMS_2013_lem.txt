некоторый проблема автоматизированный извлечение дать из веб-страница е.с. чиркин тамбовский государственный университет имя г.р. державин введение в современный мир востребовать интеллектуальный системы, извлекать (структурирующие) информация из неструктурированный источник (в англоязычный литература — data extraction как часть data mining (следовать отметить, что последний понятие не иметь устояться перевод на русский язык)). обычно в роль источник выступать простой тексты, однако возможный и иной случай – вебстраницы, многоколоночный текст, таблицы, требовать предварительный анализ перед, собственно, этап извлечение знаний. типичный сложный случай представлять себя страница газета или вебсайт – новостной ресурса. они страница содержать многоколоночный текст, врезки, цитаты, таблицы, инфографику, комментарий читателей, различный тип рекламный блоков. причём материал скомпоновать характерный образом, формировать у читатель необходимый мнение и обращать он внимание на ключевой момент публикации. именно этот компоновка элемент превращать извлечение текст с страница в проблема с нетривиальный решением. извлечение дать (извлечение информации) – это процесс получение структурировать дать из слабоструктурировать или неструктурированный источников. классический пример – парсинга каталог товар с сайт интернет-магазина, что частый весь использоваться для мониторинг цен, товаров, услуга (этый не всегда абсолютно законно согласно соглашение о использование магазина, но весьма востребовано), либо для «грязных» и приблизить к они seo-технология (создание сайт-копия и др.), социологический исследование [2], создание агрегаторов, входной фильтр для поисковый систем. извлечение дать (data extraction) предварять себя извлечение знание (data mining) [6] и являться необходимый этап предварительный обработки, от которого, в значительный степень зависеть качество извлечь знаний. даже такой простой задача, как извлечение текст из контент с вебстраница сопрячь с определённый сложность – требоваться отсечь «шапку» сайта, верхний и вертикальный меню, блок навигации, рекламный блоки, нижний часть сайт с указание правообладателя, студии-разработчика, контактов, нижний меню и прочий элемент дизайна, не содержащих, собственно, полезный информации. в дать статья под неструктурированный источник пониматься веб-страницы, не иметь значимый машиночитаемый семантический разметки, а под слабоструктурировать – логически взаимосвязанный фрагмент неструктурированный источник (например, таблица), разместить в предел один или несколько веб-страниц. проблема извлечение текст и слабоструктурировать дать из веб-страница усугубляться повсеместный нарушение и смешение стандарт и рекомендация по вёрстка веб-страниц. вызвать это мочь быть как цель конкретный сайт (длить газета – формирование нужный мнение посредством специальный оформление и компоновка материала), так и простой небрежность и ошибка в код страница сайт (мочь быть связать с недостаточный квалификация лиц, ответственный за создание и/ить функционирование сайта). ситуация ещё более усугубляться совершенство веб-браузеров, корректно отображать дать страницы, однако специализировать парсер обычно не способный справляться с дать проблемой. ряд примеров, иллюстрировать последний абзац: 1) фрагмент код страница с http://www.chaskor.ru/article/torrenty_tehnika_yuridich eskoj_bezopasnosti_: …тренной <http://www.zakonrf.info/koap/20.29/> статья 20.коап</a>. в об… по закрывать тег </a> можно предположить, что пропустить он фрагмент «a href=» после первый открывать угловой скобки. 2) ошибочный фрагмент кода: …что эквивалентный z=x-l, z(-<span style="face="times new roman">&#8734; </span>,-1]. … видный определённый попытка смешение форматирование с помощь стилей, так и с помощь тег <font>. данный пример сложный три кавычками, который должный употребляться строго попарно. большинство парсеров, либо считать третий кавычка открытие и пропускать весь текст до конец страница (пытаться поместить он в значение атрибут тега), либо останавливаться на закрывать угловой скобке. 3) в многий текстах, замещать рисунок, можно встретить подобный многострочный конструкции: <img src="…" alt="первый строка<br />второй строка<br¶/>другие¶ строки"> проблемный моменты: а) использование разметка html внутри значение атрибута; б) несколько «жёстких» перевод строка (обозначить символ «¶»); в) смешение стандарт код — html и xhtml. первый проблема из они являться принципиальный и поведение парсер html при встреча с она предсказать невозможно. наиболее частый поведение – пропадать часть страница между «открывающим» проблемный тег и такой же проблемный тег у следующий картинки, который рассматриваться как «закрывающий». подобный поведение характерный для парсер html на основа конечный автомат (т.е. практически всех) — встретить спорный конструкцию, он переходить в состояние ожидание «закрывающей» конструкция и когда находить — продолжать разбор, при это из текст вычленяться неверный фрагмент. метод извлечение дать всё метод извлечение дать с сайт можно разбить на три основной группы: ручной метод — мониторинг интересовать страница и перемещение необходимый информация в база осуществляться специальный оператор (человеком). достоинство подход – высокий качество извлечение и низкий требование к квалификация оператора, недостаток — высокий трудоёмкость, общий незначительный скорость работа и человеческий фактор. на практика количество ошибка мочь составлять 2% и выше, что, часто бывать неприемлемый высокий величиной. полуавтоматический метод — к этот группа относиться решения, способный извлекать информация после определённый настройки. сюда можно отнести как предварительный разметка оператор элемент страница в графический пользовательский интерфейсе, так и более сложный случай — например, составление регулярный выражение или запрос на язык xquery (один из предок данный язык распространить под имя xpath). наиболее распространить универсальный коммерческий приложение для полуавтоматический извлечение дать являться website data extractor от mozenda и visual web ripper к достоинство подобный группа метод следовать отнести, в идеале, такой же высокий качество извлечение [7], как и при ручной способе, но намного более высокий скорость работы. недостаток — создать оператор разметка мочь быть ошибочной, требоваться начальный и периодический участие оператора, квалификация оператор должный отвечать определённый требование (например, он следовать уметь составлять сложный регулярный выражения). автоматический (интеллектуальные) методы. принципиальный отличие являться полный отстранение человек от процесс извлечение дать — страница анализироваться и информация извлекаться автоматически без какой бы то ни быть участие оператор [7]. очевидно, в связь с нарастать рост интерес к технология big data и data mining, наиболее востребовать являться именно последний подход — полностью автоматический извлечение данных. этап извлечение дать извлечение структурировать взаимосвязанный дать из веб-страница можно свести к ряд последовательно решать задач. навигация под навигация (navigation problem) подразумеваться проблема поиск и анализ на веб-сайт страница с извлекать информацией. при это необходимо определить, весь ли интересовать информация находиться на страница и выделить ссылка на другой её часть (точнее, обычно делаться наоборот – если нет ссылка на другой страница – значит, другой страница нет). основный проблема навигация заключаться в использование разработчик код веб-страница современный или необычный технологий, а также просто нарушение следующий негласный правило проектирование сайтов. навигация посредством код на javascript. очевидно, что при это для переход на другой страница сайт требоваться исполнение кода, посредством который осуществляться навигация, в то время как извлекать дать парсер обычно намного простой браузер и не исполнять скрипт (как правило, к парсер также предъявляться определённый требование по быстродействию, что автоматически исключать всякий необходимость исполнение каклибо скрипт парсером). загрузка контент посредством ajax и «бесконечная» прокрутка страницы: проблема, дополнять себя предыдущий — к невозможность извлечь ссылка на следующий страница из сам страница сочетаться с загрузка контент по запрос с сам страницы. проблема является, в большинство случаев, фундаментальный и не решаться без исполнение кода, осуществлять показ необходимый контента. кстати, данный подход также, бывает, использоваться для защита веб-сайт от несанкционированный копирования. основный предназначение — увеличение удобство использование сайта. например, прокрутка список сообщение посредством полоса прокрутка страница браузер в социальный сеть «вконтакте». использование в внутренний механизм постраничный показ не номер страниц. в настоящий время почти не встречаться — обычно при навигация использоваться последовательный нумерация страница (с шаг 1 или большой (например, на форум по номер первый выводить сообщение на странице)). однако встречаться навигация по, например, некий id или датам. анализ быть происходить тем быстрый и эффективнее, чем маленький быть найти дубликат страница с извлекать информацией. замечание: это иметь значение, т.к. большинство алгоритм выделение структура в тот или иной смысл использовать статистика элементов. дубликат нарушать статистический распределение элемент и мочь нарушить распознавание. проблема заключаться в том, что многие cms (система управление содержимое сайта) предоставлять доступ к основный страница по разный адресам. распознавание постраничный ссылка мочь некорректно работать с они незначительный количеством. например, стандартный навигация для два страница мочь иметь шесть постраничный ссылка приблизительно следующий вида: < << 1 2 >> >, где: «2» — текущий страница, а также гиперссылка на текущий страницу, «1» — гиперссылка на первый страницу, причём первый подразумеваться в смысл «предыдущий перед текущей», «<» — гиперссылка для переход к первый странице, «<<» — гиперссылка для переход к предыдущий странице, «>» — гиперссылка для переход к последний странице, «>>» — гиперссылка для переход к следующий странице. такой образом, шесть ссылка на два страница (1, 1, 1, 2, 2, 2) способный создать сложность для распознавание элемент постраничный навигации. преодолеваться обычно массовый посещение с дать весь возможный страница и последующий они анализ с постобработкой. на практика возможно создание парсер на основа activex-компонент internet explorer (ить компонент модуль qtwebkit), при это парсер получать возможность соответствовать браузера, в тот число и полный доступ к динамически создавать и/ить загружать контенту. возможно также написание расширение к браузер с аналогичный целью. некоторый современный cms способный предоставлять доступ к интересовать информация по прямой ссылкам, через оглавление сайт и др., т.е. не только через страницу, использовать данный проблемный подход. помимо это на практика встречаться и другой проблема — сайт полностью или целиком мочь быть сделать с использование технология flash, ограничение на количество запрос в интервал время (в секунду, в минуту, в час), ограничение на количество запрос с один ip-адреса, ограниченный доступ к весь или отдельный страница сайта. общим, но действенный решение дать проблема следовать считать принудительный ограничение количество соединение с сайт (не более 3-й в секунду). распознавание извлекать дать распознавание дать и распознавание структура (data extraction problem) – задача заключаться в необходимость определение участок на вебстранице, содержать извлекать информацию, а также структура извлекать данных. наиболее часто, но не всегда, дать задача заключаться в поиск повторяться структура дать [4]. в простой же случай веб-страница следовать представить в вид дерево dom-элемент и искать узлы, иметь одинаковый структура дочерний узлов. иной способы: 1) на основа анализ графический представление веб-страницы. чрезвычайно ресурсоёмкий, но эффективный подход. на практике: а) несложно найти сайт проблемный разметкой, который некорректно отображаться и, соответственно, плохо поддаваться анализу; б) на отдельный группа сайт норма стать всплывать модальный окно (как с рекламой, так и с предложение использовать, например, приложение и социальный сервис данный сайта), закрывать себя контент. 2) поиск на основа семантический разметка и микроформат — отвечать первоначальный цель создание всемирный паутины, но семантический разметка в настоящий время массово использоваться практически с противоположный цель — для повышение рейтинг в поисковый системах, но не для смысловой разметка контента. 3) текстовый анализ – выделение элемент по они содержимое с учёт обрамлять htmlразметки. например, редкий текст обходиться без имя собственных. соответственно, база дать имён, фамилий, название компаний, страна и населить пункт способный значительно повысить качество выделение информативный текстовый блоков. другой вариант: известно, что в html есть потоковый элементы, а есть блочный (управлять взаимный положение элемент при они отображении). весь вёрстка формироваться блоковый элементами, всё форматирование — потоковыми. редкий исключение являться специфичный и они допустимый игнорировать при извлечение данных. обеспечение единообразие обеспечение единообразие — следовать обеспечить однородность извлекать данных, который мочь быть представить на веб-страница с некоторый вариативность атрибутов. рассмотреть следующий сложный случай. пусть существовать каталог статей. каждый статья представить файл с она названием, автором, аннотацией, ключевой словами. и значительный количество поле не быть заполнено, поэтому не быть выведено. разумеется, при корректный извлечение дать следовать недоставать поле оставить пустыми. основный сложность здесь заключаться в возможный сбой определение количество извлекать поле для каждый записи, поэтому, возможно, что при кластеризация дать быть сгруппировать неправильный образ (например, статья с аннотация образовать один набор данных, а статья с аннотация и автор — другой, что, в общий случае, неверно). помимо это некоторый дать часто следовать нормализовать отдельный алгоритмами: например, телефон мочь быть записать как «тел. 23-7-89», «8 (800) 555-5555», «88005555555» и другой способами. аналогично — дата и время, населить пункт (например, «г. санкт-петербург», «санктпетербург», «питер» и др.). объединение дать проблема объединение дать заключаться в следующем: извлекать конкретный единица информация (запись) мочь быть представить на сайт (ить даже странице) неоднократно, поэтому по окончание выделение необходимо обеспечить удаление дубликатов. это задача легко можно решить по окончание извлечение данных, однако парсинга по сравнение с принятие решение по окончание более ресурсоёмкий операцией, поэтому оптимальный дубликат обнаруживать до него. в свой очередь, не всегда в принцип возможно определить дубликат страниц. например, в магазин радиодеталь «чип и дип» (www.chipdip.ru) существовать множество полностью одинк запись и только при открытие конкретный товар можно определить, что, например, речь идти о разный партия от разный поставщиков. после осуществление дать этап информация с веб-страница приводиться в систематизировать форму, пригодный для импорт в база знаний. однако не всегда следовать сосредотачиваться на полностью автоматический извлечение информация из веб-страниц. интересный факт, заметить в наш работа — в связь с повсеместный распространение один и тот же cms (например, joomla, wordpress, drupal и др.) с стандартный модуль и расширение весь 37 группа сложный правило способный корректно обработать более 98% русскоязычный сайт в полуавтоматический режиме. заключение извлечение структурировать дать из слабоструктурировать или неструктурированный источник с последующий извлечение знание являться база для построение самообучающийся систем, лежать в основа три самый востребовать направление современность - экспертный система (например, ibm watson [3]), поисковый система (например, яндекс [1]) и, в идеале, предсказывать экспертный система (не существуют, вероятный кандидат — ibm watson). в статья затронуть основной проблемы, который встать перед разработчик система извлечение информация из вебстраница и упомянуть путь они возможный решения.