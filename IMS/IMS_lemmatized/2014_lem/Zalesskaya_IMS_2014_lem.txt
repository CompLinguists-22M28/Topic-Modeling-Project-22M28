программа выявление в текст двучленный статистически значимый осмыслить коллокация (на материал русский языка) в.в. залесский санкт-петербургский государственный университет введение с появление компьютер возникнуть возможность автоматический обработка лингвистический данных. разнообразный программный средство помогать исследователь решать многие проблема лингвистики, позволять проводить недоступный ранее исследования. появление корпусный лингвистика дать возможность изучать сочетаемость слово в больший массив текстовый данных. однако использование стандартный корпусный менеджер не всегда давать удовлетворительный результаты. в дать работа мы обратиться к проблема повышение эффективность автоматический поиск коллокаций. коллокация называться «лексикофразеологически обусловить сочетаемость слово в речь как реализация они полисемии» [1, с. 193]. степень обусловленность такой сочетаемость можно определить автоматически при помощь статистический метод ― так называть мера ассоциации. мы постараться увеличить они эффективность при выявление коллокация за счёт решение проблем, препятствовать корректный работа современный корпусный менеджеров, и создать собственный программный обеспечение, способный выявлять двусловный статистически значимый осмыслить коллокация в текст на русский языке. 1. мера ассоциация и проблема выявление коллокация в качество статистический метод выявление коллокация мы рассмотреть в дать работа мера ассоциация — «математический аппарат для установление синтагматический связь между слово в тексте» [4, с. 11]. мера ассоциация определять сила ассоциация между коллокат на основа частота они собственный и совместный встречаемость в корпусе. при описание мера ассоциация в этот глава мы быть опираться на материал интернет-сайт [7]. 1.1. классификация мера ассоциация на интернет-сайт [7] в разделе, посвятить мера ассоциации, даваться описание, характеристика и оценка эффективность различный тип этот мер. с.эверт выделять семь тип мера ассоциации: − мера правдоподобия: binomial-likelihood, multinomial-likelihood, poisson-stirling, poisson-likelihood, hypergeometric-likelihood; − точный критерий для проверка гипотезы: binomial, poisson, fisher; − асимптотический критерий для проверка гипотезы: z-score, t-score, chi-squared, loglikelihood; − точечный оценка сила ассоциации: mi, odds-ratio, relative-risk, ms, liddell, dice, jaccard; − оценка сила ассоциация с запасом: miconf,α; − мера из теория информации: pointwise mi, average mi, local mi; − эвристический меры: frequency, mi2, mi3, random. далее мы подробный рассмотреть тот мера ассоциации, который быть использовать мы при создание программа выявление коллокаций. 1.2. широко использовать мера ассоциация 1.2.1.мер log-likelihood как мы уже указать ранее, мера log-likelihood (критерий отношение правдоподобия) относиться к тип асимптотический критерий для проверка гипотезы. формула для её вычисление существовать в несколько вариантах, однако мы воспользоваться модификация оригинальный формула т.даннинг [5], предложить в [7] (см. рис.1). при создание программа мы быть пользоваться стандартный способ представление и задать значение наблюдать частота следующий образом: o11 = f(n,c); o12 = f(n) – f(n,c); o21 = f(c) – f(n,c); o22 = n – f(n,c) – (f(n) – f(n,c)) – (f(c) – f(n,c)) = n + f(n,c) – f(n) – f(c), где n — ключевой слово; c — коллокат; f(n,c) — частота встречаемость ключевой слово n в пара с коллокат с; f(n), f(c) — абсолютный (независимые) частота ключевой слово n и коллокат c в корпус (тексте); n — общий число словоформа в корпус (тексте). 1.2.2.мер mi мера mi (коэффициент взаимный информации) относиться к точечный оценка сила ассоциации. в основа mi лежать понятие взаимный информация (mutual information), заимствовать из теория информации. коэффициент взаимный информация сравнивать зависимый контекстно-связанный частота с независимый (переть случайный появление слово в контексте) [4, с.12]: mi (n, c) = ; где n — ключевой слово; c — коллокат; f(n,c) — частота встречаемость ключевой слово n в пара с коллокат с; f(n), f(c) — абсолютный (независимые) частота ключевой слово n и коллокат c в корпус (тексте); n — общий число словоформа в корпус (тексте). мы видим, что наиболее высокий значение mi получать сочетания, для который f(n,c) стремиться к . это характерный в частность для сочетание низкочастотный элементов, который мочь оказаться случайными, а также для разный родиться опечаток. мера mi существовать в разный вариант — обычный и несколько нормализованных. мы быть использовать при создание программа как обычный вариант, так и один из нормализовать – эвристический мера mi3. её значение вычисляться по формула [7]: mi3 = ; где n — ключевой слово; c — коллокат; f(n,c) — частота встречаемость ключевой слово n в пара с коллокат с; f(n), f(c) — абсолютный (независимые) частота ключевой слово n и коллокат c в корпус (тексте); n — общий число словоформа в корпус (тексте). как видно, эвристический мера mi3 увеличивать вес частота совместный встречаемость в числителе, что не давать mi завышать значение для низкочастотный сочетаний. такой образом, mi3 должный показать хороший результат при выявление коллокация на практике, чем обычный мера mi. 1.2.3.мер t-score t-score - мера ассоциации, которая, как и loglikelihood, относиться к асимптотический критерий для проверка гипотезы. она вычисляться по формула [8]: t-score (n, c) = ; где n — ключевой слово; c — коллокат; f(n,c) — частота встречаемость ключевой слово n в пара с коллокат с; f(n), f(c) — абсолютный (независимые) частота ключевой слово n и коллокат c в корпус (тексте); n — общий число словоформа в корпус (тексте). этот формула показывает, насколько распределение ключевой слово и коллокат в корпус (тексте) зависеть друг от друга. однако возможный переоценка некоторый случайный результатов, в частности, сочетание высокочастотный элемент с низкочастотным. по этот причина t-score обычно использоваться в комбинация с другой мерами, частый весь с mi. 1.2.4.мер dice мера dice относиться к точечный оценка сила ассоциации. она вычисляться по формула [8]: dice = ; где n — ключевой слово; c — коллокат; f(n,c) — частота встречаемость ключевой слово n в пара с коллокат с; f(n), f(c) — абсолютный (независимые) частота ключевой слово n и коллокат c в корпус (тексте). в отличие от рассмотреть выше мер, dice не учитывать размер корпус (текста), быть основать только на частота совместный встречаемость и независимый частотах. опять же, как и в случай с mi, мы видеть здесь возможность переоценка низкочастотный сочетаний. мера dice иметь также нормализовать форма – logdice: logdice = ; где n — ключевой слово; c — коллокат; f(n,c) — частота встречаемость ключевой слово n в пара с коллокат с; f(n), f(c) — абсолютный (независимые) частота ключевой слово n и коллокат c в корпус (тексте). 1.2.5.мер minimum sensitivity мера minimum sensitivity – ещё один точечный оценка сила ассоциации. она рассчитываться по формуле[8]: minimum sensitivity = ; где n — ключевой слово; c — коллокат; f(n,c) — частота встречаемость ключевой слово n в пара с коллокат с; f(n), f(c) — абсолютный (независимые) частота ключевой слово n и коллокат c в корпус (тексте). как и мера dice, minimum sensitivity не учитывать размер корпус (текста). опять же, возникать возможность переоценка низкочастотный сочетание и элементов. 1.2.6.мер salience мера salience (mi.log-f[6]) не рассматриваться в рамка классификация [7], однако мы считать возможный рассматривать её как нормализовать вариант мера mi. формула для её расчёта: salience = ; где n — ключевой слово; c — коллокат; f(n,c) — частота встречаемость ключевой слово n в пара с коллокат с; f(n), f(c) — абсолютный (независимые) частота ключевой слово n и коллокат c в корпус (тексте). этот мера увеличивать вес частота совместный встречаемость ключевой слово и коллокат по сравнение с mi. такой образом, эффективность salience также должный быть выше, чем у mi. 2.проблема выявление коллокация как мы указать ранее, существовать множество разнообразный мера ассоциации. не всё из они использоваться при решение практический задач, но даже те, который уже утвердиться в традиционный практике, не лишить серьёзный недостатков. в наш прошлый исследование [3, с.26―28] мы выявить и наглядно проиллюстрировать некоторый проблемы, возникать при решение практический задача с использование распространить мера ассоциации. здесь мы упомянуть главный из них, решить который мы собираться в наш программе. во-первых, главный проблема такой мера ассоциации, как log-likelihood и t-score, являться выделение сочетание слово с знак препинание (ить комбинация знак препинания) в качество коллокаций. такой сочетание в текст встречаться очень часто и в результат иметь больший значение этот мер, чем осмыслить коллокации. нужно также отметить, что мера mi иметь занизить значение для такой сочетание и такой образ не рассматривать они как полноценный коллокации. второй важный проблема мера это родиться являться выделение в качество коллокация сочетание знаменательный слово с служебным. такой сочетания, как правило, неосмысленный и не характеризоваться зависимость распределение коллокат друг от друга. мера mi и здесь отличаться более правильный подход к такой сочетание и занижение они значений. во-третьих, возникать проблема выделение в качество коллокация случайный неосмысленный сочетаний. к они относиться опечатка разный родиться и просто случайный употребление сочетание слово в некоторый контекст (например, в заголовок статей). это становиться наиболее очевидный при использование мера mi – она завышать вес такой неосмысленный сочетаний. однако такой меры, как log-likelihood и t-score, придавать это сочетание низкий значения, и они не попадать в список частотный коллокаций. такой образом, ни один из самый распространить мера ассоциация не решать задача выявление коллокация безошибочно. поэтому необходимо либо использовать этот мера в комбинация друг с другом, либо создать новый алгоритм выявление коллокаций, который занижать бы значение мера ассоциация для неосмысленный сочетаний, или вовсе исключать бы они на промежуточный стадия выделения. 3.программа выявление коллокация 3.1.использовать программный обеспечение разработать мы программа написать на язык программирование python, что позволять она работать практически на весь платформах. для корректный работа программа необходимый python версия 2.7 и установленный библиотека для морфологический анализ pymorphy с словарь для русский языка, а также установленный библиотека pyqt4 для поддержка программа с графический интерфейсом. 3.2.требование к входной дать на вход программа подаваться текстовый файл на русский язык с расширение .txt, сохранить в кодировка utf-8. для того, чтобы привести текст в необходимый формат, можно выполнить, например, такой последовательность действий: − открыть текстовый файл в microsoft word; − сохранить он как обычный текст; − при сохранение указать кодировка юникод (utf-8). 3.3.оценка эффективность программа выявление коллокация для оценка эффективность программа выявление коллокация мы использовать специальный текст ― реферат по философии, так как для специальный текст характерный наличие большой число устойчивый и терминологический словосочетаний. объём текст ― 1098 слово (6785 знаков). мы специально выбрать текст небольшой объёма, чтобы количество коллокация быть не очень больший (не более 50) и можно быть подробно проанализировать результат выполнение программы. полный список коллокаций, найти программа в специальный тексте, для два тип поиск привести в приложение 2. как мы мочь увидеть, программа находить в специальный текст разный тип сочетаний: − терминологический сочетание (теория познания, простой идеи, внутренний опыт); − общеязыковой сочетание (представлять собой, орган чувств, основной черты); − имя собственный (джон локк); − вводный конструкция (то есть); − сочетания, характеризовать тема текст (черта эмпиризма, получение знаний, наш ум); − свободный сочетание (ум получает, существовать три); − сочетание с нераспознанный служебный слово (переть помощи); − сочетание с нераспознанный окказиональный элемент (познание дж). больший количество найти в текст сочетание относиться к первый группа ― это различный термин философия и другой наук. также программа распознавать много общеязыковой сочетаний, сочетаний, характеризовать тема текста, и свободный сочетаний. два последний тип сочетание встречаться крайне редко. проблема с нераспознанный служебный слово и окказиональный элемент обусловить не недоработка в алгоритм программы, а некорректность работа библиотека для морфологический анализ pymorphy в ряд случаев. этот недостаток мы рассмотреть подробный в следующий подразделе. 3.4.случай некорректный работа библиотека pymorphy как можно увидеть из таблица в приложение 2, некорректный работа библиотека pymorphy в ряд случай приводить к следующий недостаткам: − неправильный определение часть речь слово мочь привести к включение сочетание с служебный слово в выдача (в сочетание «переть помощи» часть речь предлог ‘при’ определить как имя существительное, поэтому это сочетание быть включить программа в итоговый таблицу); − неправильный определение лемма (переть правильный определение часть речи) мочь мешать правильный подсчёт частота встречаемость (в сочетание «получение знаний» лемма второй слово быть определить как «знанье»); − приписывание лемма и часть речь окказиональный элемент (в сочетание «познание дж» элемент «дж» быть приписать лемма «дж» и часть речь ― имя существительное); − нераспознавание лемма (в сочетание «врождённый идей» лемма первый слово не быть распознана, и оно быть оставить в исходный виде); так как случай выдача некорректный результат крайне редкий и обусловить недостаток в работа библиотека для морфологический анализа, а не алгоритм программы, то, в целом, можно считать, что поставить мы задача решить и программа решать заявить мы проблемы. 3.5.решение проблема выявление коллокация в разработать программа разработать мы программа решать несколько проблема выявление коллокаций, исследовать мы в прошлый году. во-первых, решить проблема поиск сочетание слово и знак препинание в качество коллокаций. знак препинание в наш программа не рассматриваться как словоупотребление в текст и исключаться из рассмотрение на один из ранний стадия обработка текста. во-вторых, решить проблема поиск сочетание знаменательный и служебный слово в качество коллокаций. при помощь библиотека pymorphy программа определять часть речь для каждый словоупотребление в текст и на стадия формирование список потенциальный коллокация исключать такой сочетание из рассмотрения. в-третьих, решить проблема поиск низкочастотный сочетание в качество коллокаций. наш программа исключать из рассмотрение всё сочетание с частота совместный встречаемости, малый или равный единице. так как наш программа разработать для работа с небольшой по объём текстами, это вполне достаточно для достижение необходимый результатов. в-четвёртых, словоупотребления, разделить знак препинания, в наш программа не считаться коллокациями. возможно, это некорректно в ряд случаев, но всё же, в основном, это очень эффективный мера отсеивание нерелевантный сочетаний. такой образом, наш программа решать некоторый важный проблема выделение коллокаций, который затруднять корректный работа многий современный корпусный менеджеров. 3.6.сравнение эффективность использовать в программа мера ассоциация чтобы оценить эффективность использовать мер, мы отобрать для каждый мера и тип поиск 10 выдать коллокат с больший значение мер. список коллокаций, использовать для оценка эффективность мера в наш программе, мы поместить в приложение 1. из таблица приложение 1 можно увидеть, что практически всё мера ассоциация в наш программа работать достаточно эффективно. ни в один из таблица не оказаться сочетание с окказиональный элементами. сочетание «переть помощи», выделить многий мерами, оказаться в таблица только из-за упомянуть мы выше ошибка библиотека pymorphy в приписывание часть речи. если считать выделить мера ассоциация свободный сочетание слово отрицательный показатель эффективности, то с этот точка зрение наименее эффективный оказаться мера mi (по 2 свободный сочетание из 10 словоформа и лемм) и minimum sensitivity (2 свободный сочетание для словоформа и 1 для лемм). чуть более эффективный мера dice и log-dice (по один свободный сочетание для словоформа и лемм), причём нормализовать мера показать такой же эффективность, как и ненормализованный версия. остальной мера не выделить ни один свободный сочетания, всё выявить они коллокация относиться к пять первый категория из пункт 2.5., то есть, они действительно выделять словосочетания, воспринимать мы как несвободный или неслучайные. следовать отметить, что нормализовать версия мера mi ― mi3 и salience ― оказаться эффективнее, чем ненормализованный мера. ещё один интересный наблюдение состоять в том, что набор терминологический сочетаний, выделить различный мерами, несколько отличается, в то время как тот немногие сочетания, который быть выделить весь мера без исключения, характерный для общий система языка. поэтому наш решение использовать в программа 9 мера ассоциация быть полностью оправданным. такой образом, при правильный комбинация алгоритм выявление коллокация и эффективный мера ассоциация можно достигнуть достаточно точный результат при выявление коллокаций. заключение и направление совершенствование программа в дать работа мы привести подробный описание использоваться на практика мера ассоциация ― статистический метод выявление сочетаемость слово в тексте, рассмотреть основной проблемы, возникать при выявление коллокаций, и попытаться решить они при создание собственный программа поиск коллокация в текст на русский языке. проблема выделение сочетание с знак препинание в наш программа решить полностью, проблема выделение сочетание знаменательный слово с служебный и случайный сочетание решить в тот мере, в какой позволять корректный работа библиотека морфологический анализа. разработать мы программа выделять двусловный коллокация несколько типов: терминологический и общеязыковой сочетания, имя собственные, вводный конструкции, сочетания, характеризовать тема текста, а также некоторый свободный сочетания. использовать в программа мера ассоциация в целое показать высокий эффективность при поиск коллокация и не переоценивать свободный сочетания. результат разный мера совпадать при выделение общеупотребительный слово и расходиться при выделение терминов. это свидетельствовать о том, что для эффективный выявление в текст коллокация разный тип необходимо использовать комбинация несколько мер. однако главный являться то, что решение проблема выявление коллокация позволять существенно повысить эффективность поиск осмыслить сочетание и мера ассоциации.