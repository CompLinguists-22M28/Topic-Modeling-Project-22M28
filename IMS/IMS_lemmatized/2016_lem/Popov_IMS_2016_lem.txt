ещё раз о способ снятие структурный омонимии: выбор единственный структура в парсер hurma а.м. попов1,2, е.в. протопопова1,2, г.т. букия 1 1 санкт-петербургский государственный университет hedgeonline@gmail.com, protoev@gmail.com, gregorybookia@yandex.ru 2 проект хурма 1. введение синтаксический анализ являться один из наиболее спорный и трудоёмкий задача автоматический обработка текста. с один стороны, это связать с больший количество синтаксический теорий, многие из который иметь лишь ограниченный практический применение. с другой стороны, модуль синтаксический анализ востребовать в такой приложениях, как система извлечение фактов, вопросно-ответный системы, машинный перевод. что касаться русский языка, то вследствие богатый морфология задача синтаксический анализ оказываться более сложный по сравнение с сборник научный стать xix объединить конференция «интернет современный общество» ims-2015, санкт-петербург, 22 - 24 июнь 2016 года. и английским, для который сформироваться ряд общепризнанный решение (stanford parser etc.). подробный анализ существующий решение для русский язык быть провести в 2011–12 год в рамка форум «оценка метод автоматический анализ текстов» [1], который быть посвятить синтаксический анализу. в рамка соревнование быть подготовить золотой стандарт разметки, который до сей пора оставаться единственный эталон разбор текст на русский языке. среди участник быть как коммерческий система — abbyy compreno [2], syntautom [3], — так и академический разработка (этап-3 [4]). результат форум и последующий работа показывают, что система синтаксический анализ (парсеры) использовать как подходы, основать на правилах, так и статистический и гибридный подходы. кроме того, существующий парсер предполагать различный вид синтаксический представление — от традиционный грамматик зависимость и составлять parser — грамматика связь (link grammar до, например, http://slashzone.ru/parser/). однако, немногие среди известный решение представлять себя системы, доступ к который открыть для исследователя. следовать упомянуть maltparser, обученный модель для который распространяться свободно, в тот число и для русский языка, и который использоваться большинство некоммерческий разработка [5; 6]. 2. архитектура синтаксический парсер hurma 2.1. реализация и алгоритм в сила того, что к сам лингвистический анализатор предъявляться максимально широкий требование для возможность решение широкий спектр прикладной и исследовательский задач, к модуль синтаксический анализ быть выдвинуть следующий требования: (1) синтаксический анализ должный проводиться без предварительный снятие морфологический неоднозначности; (2) синтаксический анализатор должный строить всё вариант синтаксический структур; (3) алгоритмический сложность анализ не должный быть экспоненциальной; (4) в результат синтаксический анализ должный получаться единственный структура и при это наиболее вероятный среди всех; (5) алгоритм должный быть адаптировать к неполнота грамматика и обеспечивать возможность выбор наиболее крупный фрагмент «развалиться структуры»; (6) тип выходной структура — дерево зависимостей. требование (1) являться необходимый для выполнение требование (2), т.к. при удаление некоторый морфологический вариант ещё до синтаксический анализ можно потерять «хорошие» кандидат структур. требование (2) являться необходимый для выполнение требование (4), т.к. если не перебирать всё вариант структур, то нельзя гарантировать, что выдавать структура быть иметь высокий вес. требование (3) необходимо для того, чтобы гарантировать конечный время синтаксический анализ при условие (2). последний требование (5) и (6) обусловить тем, что структура зависимость хороший подходить для непосредственный использование на последующий уровень анализа, такой как, например, семантический, а вероятность частичный разбор на ранний стадия разработка грамматика весьма высока, поэтому должный быть возможность извлечь максимум информация для последующий уровень анализ даже в тот случае, если разбор «развалился». проанализировать вышеописанный требование мы прислать к выводу, что наиболее удобный база для наш анализатор являться алгоритм кокаянгер-кас (cyk). тот есть ряд причин. во-первых, алгоритм cyk позволять без какой-либо доработка использовать морфологически неоднозначный вход — мы просто создавать несколько нетерминальный символ в ячейка таблицы, соответствовать каждый многозначный токену, такой образом, обеспечивать выполнение (1). во-вторых, алгоритм cyk являться алгоритмом, использовать принцип динамический программирования, что позволять мы перебирать всё вариант синтаксический структура и при это в явный вид они не перечислять, обеспечивать полиномиальный сложность анализ и, соответственно, выполнение (2) и (3). в-третьих, хотя на выполнение (4) выбор алгоритм непосредственно никак не влияет, стоить отметить, что cyk, являться подвид табличный парсера, позволять максимально быстро определять наличие целое разбора, путём просмотр содержимое угловой ячейка треугольный таблица или, в случай отсутствие такового, путём постепенный спуск выбирать наиболее вероятный фрагмент развалиться разбора, обеспечивать выполнение (5). разумеется, использование алгоритм cyk приводить к определённый особенностям, который можно быть бы счесть недостатками, но в наш реализация мы попытаться превратить они в преимущества. во-первых, алгоритм cyk предполагать использование грамматика составляющих, что в принцип не очень хорошо соотноситься с требование (6). во-вторых, грамматика составлять должный быть представить в нормальный форма хомского, т.е. она должный быть бинарной. объединять этот два аспект в единый концепцию, мы получать возможность в каждый бинарный правило проставить синтаксический отношение между он компонент (отмечать каждый из два составлять каждый правило как вершина или зависимое), что давать мы простой и эффективный способ получать структура зависимость автоматически по структура составляющих. кроме того, менее очевидный преимущество такой подход являться возможность для каждый составлять определять такой параметр как «длина связи», который в дальнейший играть немаловажный роль в наш модель для выбор правильный структуры. 2.2. особенность реализация таблица cyk для тот чтобы в полный мера воспользоваться преимущество алгоритм cyk в план динамический программирование и для предотвращение комбинаторный взрыв необходимо разработать специальный модель представление составляющих, который бы позволять объединять «одинаковые» составляющие, попасть в один ячейка таблица в разный время и путём применение разный правило в разный порядке. дать модель быть накладывать определённый ограничение на возможность описание составлять в правилах. это связать с тем, что мы в наш подход отказываться от различение внутренний структура составлять при они сравнении. в наш понимании, составлять мочь считать идентичными, если они:  покрывать один и тот же диапазон токенов;  иметь один и тот же тип (например vp или np);  иметь один и тот же набор граммема и помет;  иметь один и тот же токен в качество вершины. за выполнение первый условие отвечать сам алгоритм cyk, т.к. координата ячейка таблица определять собственно начало и длина диапазон токенов, такой образом, попасть в один ячейка составлять всегда быть совпадать по диапазону, а попасть в разный — никогда не совпадут. соответственно, получается, что если в один ячейка таблица попадать составляющие, совпадать по (2) и (3), то они по определение быть порождать в дальнейший идентичный синтаксический структуры. это, в свой очередь означает, что они можно объединить в один (что, в свой очередь, как раз и обеспечивать полиномиальность алгоритма). под объединение мы в данный случай понимать закрепление за один сочетание свойство (2) и (3) несколько возможный разбиение дать составлять на два других. кроме того, условие (4) необходимо для того, чтобы гарантировать однозначность зависимый слово для отношения, входящий в составляющую, иметь различный разбиения. кроме того, ещё один важный особенность алгоритм cyk состоять в том, что стандартный схема обход таблица для объединение составлять по правило предусматривать поочерёдный обход составлять по увеличение длины. это гарантирует, что когда составлять включаться в состав родительской, то всё возможный парный сочетание её дочерний составлять уже включить в её состав. важность данный свойство быть показать в следующий разделе. 2.3. взвешивание составлять в конец предыдущий раздел быть высказать фундаментальный мысль, позволять мы в дальнейший эффективно выбирать единственный правильный структуру: к моменту, когда составлять включаться в состав родительской, она уже содержать в себя всё возможный разбиение на два другой (если, конечно, она не являться атомарной). это означает, что вес составлять c мочь быть определить как вес максимальный её разбиение p. max строго говоря, это означает, что мы для каждый составлять мочь игнорировать всё разбиения, который иметь вес маленький максимальный (т.е. всё кроме одной). получается, что после завершение анализа, выбирать составлять с максимальный покрытие и максимальный весом, путём обход структура сверху вниз и выбирать при обход каждый раз разбиение с максимальный весом, мы выбирать из множество всевозможный структура один единственную, и притом с гарантированно максимальный весом. такой образом, мы оставаться решить два задачи:  как определять вес разбиения;  как определять вес атомарный составлять (получить из терминальный символа). в наш модель мы выбрать следующий подход. для разбиение вес считаться как сумма три компонентов: веса, соответственно, два составлять и вес синтаксический связь между ними: → . такой образом, главный задача сводиться к тому, по какой критерий и как вычислять вес синтаксический связи. что касаться взвешивание атомарный составляющих, то, строго говоря, методика принципиальный значение не имеет: всё атомарный составлять мочь получать или один и тот же вес в начало анализа, или получать индивидуальный веса, соответствовать вероятность появление в текст леммы, словоформа или морфологический тег тот токена, который являться основа дать составляющей. 2.4. взвешивание синтаксический связь мы плавно переслать в наш вопрос о выбор единственный правильный структура от алгоритм и взвешивание составлять к взвешивание синтаксический связей, т.е. фактически прислать к тот модели, который очень часто использовать в синтаксический анализаторах, использовать грамматика зависимость [3; 5]. мы получить такой модель, в который мы нужно только лишь правильно взвесить синтаксический связи, а выбор единственный верный структура (в соответствие с весами) быть произвести автоматически. мы оставаться лишь описать критерий и механизм преобразование этот критерий в компонент вес синтаксический связей. на сегодняшний день мы использовать следующий критерии: (1) длина синтаксический связи; (2) тип синтаксический связи; (3) лексический сочетаемость связывать слов. по повод критерий (1) существовать обратный зависимость между длина между слово и вероятность наличие синтаксический связь между они [7] — чем маленький расстояние между словами, тем большой вероятность, что ни синтаксически связаны. критерий (2) позволять управлять процесс выбор структура путём присвоение вес каждый тип связь (путём изменение этот весов, добавление или удаление тип связей). критерий (3) позволять использовать статистика о лексический сочетаемость слов, для тот чтобы определить, насколько вероятный связь между этот словами. такой образом, итоговый вес связь мочь быть вычислить как: где wr – это итоговый вес связи, v – это «сырое» значение по критерий (1), а k — это коэффициент влияние критерия, d (distance — величина, обратный расстояние между словами), t (type — вес тип синтаксический отношения) и l (lexical — вес лексический сочетаемость связывать слов). получается, что критерий (1) условно можно назвать автоматический (им нельзя явно управлять), критерий (2) можно назвать экспертный (за счёт он возможный тонкий настройка), а критерий (3) можно назвать статистическим. при этом, тонкий настройка весь система возможно при помощь экспертный управление коэффициент k, раздельно по каждый критерию. именно поэтому мы называть наш подход гибридным, подразумевая, что вес синтаксический структура определяться и на основа экспертных, и на основа статистический данных. 2.5. оценка лексический сочетаемость оценка лексический сочетаемость производиться согласно алгоритму, , вычисляться базовый описать в статья [8]. для каждый пара слово мера сочетаемость f (в наш случай – по критерий взаимный информации, который показать хороший результат в указанный статье). затем ∼ , который оказываться использоваться понятие взаимозаменяемость особенно удобный для пар, который не встречаться в обучать корпусе: грубо говоря, два лексема взаимозаменяемый настолько, насколько совпадать они контексты. итоговый значение, характеризовать сочетаемость, описываться через взвесить среднее: 3. оценка метод 3.1. особенность тестирование в сила того, что наш синтаксический анализатор находиться в стадия активный разработки, а наш грамматика далёкий от того, чтобы называться хотя бы относительно полной, мы решить подойти к составление тестовый коллекция с точка зрение того, что наш синтаксический анализатор уже уметь правильно анализировать. для данный исследование мы решить ограничиться только простой предложениями, длина не более 150 символ и не содержать никакой пунктуационный знаков, кроме кавычка и знак конец предложения. по дать критерий быть сформировать предварительный корпус объём 1000 предложений, выбрать из открытый корпуса. далее этот предложение быть обработать наш анализатор и из они быть отобрать те, который иметь полный разбор, такой оказаться 241 предложение. далее мы вручную просматривать получить структура и экспертный отбирать они правильность. правильный оказаться 74 штуки, из который и быть сформировать наш тестовый корпус. это означает, что при текущий настройка (включить взвешивание по расстояние и тип связей) наш анализатор на данный корпус обеспечивать 100% точность выбор вариант структуры. 3.2. наш baseline теперь, отключить всё механизм взвешивание синтаксический структур, мы мочь определить наш baseline по точность выбор правильный структуры. мы определяем, какой процент структура и синтаксический связь наш анализатор способный правильно выбрать в качество единственный варианта, не иметь никакой критериев, т.е. произвольно. мы получить для произвольный выбор следующий показатели:  5,4% точность при выбор целый структур;  76,6% точность при выбор отдельный связей. первый показатель означает, что при произвольный выбор один целый структура из предложить грамматика вариант полный совпадение с структура из эталон происходить чуть более чем в пять случай из ста. второй показатель означает, что более три синтаксический связь из четырёх, содержаться в выбрать произвольно синтаксический структуре, являться правильными. 3.3. оценка различный метод взвешивание мы провести серия экспериментов, нацелить на то, чтобы выяснить, насколько вырастать наш точность относительно baseline при активация тот или иной критерий взвешивание синтаксический структура при выбор варианта. точность по целый структура у baseline крайне низкая, чуть выше 5%, что означает, что шанс на произвольный выбор правильный структура практически нет и для того, чтобы выбирать правильный структуру, обязательно нужно подключать дополнительный критерии. такой, казаться бы, логичный критерий, как длина синтаксический связи, на практике, показывать себя крайне малоэффективный при самостоятельный использование — точность с они не доходить до 11%, прибавлять к baseline весь лишь 5,4%. вес синтаксический связи, напротив, показывать себя как наиболее эффективный критерий, обеспечивать точность почти в 84%, что не удивительно, т.к. это основной критерий, который мочь управлять разработчик грамматика для максимизация точность выбор синтаксический структуры. критерий лексический сочетаемость проверяться на различный биграммный модель по методу, описать в статья [8] и при помощь инструмент word2vec. тем не менее, модель, получить при помощь word2vec, по прирост превысить качество модель на длина синтаксический связей. более того, причина такой результат следовать анализировать относительно того, насколько в принцип модель лексический сочетаемость мочь быть применимый для исправление тот ошибка выбор синтаксический структуры, который иметь место в корпусе. 3.4. вывод в рамка наш исследование мы провести ручной верификация почти два с половина сотня предложений. учитывая, что лишь треть из они расцениваться эксперт как полностью правильные, остальной приходиться анализировать с точка зрение ошибка синтаксический структур. мы обнаружить несколько основный тип ошибок: (1) правильный вариант синтаксический связь не описать в грамматика — такой случай примерно треть от весь встретиться ошибок; (2) ошибка при присоединение предложный группа — самый многочисленный категория, примерно половина весь встретиться у мы ошибок; (3) ошибка в выбор тип синтаксический отношения, не приводить к модификация структура — например, когда прямой объект маркироваться как подлежащее, а подлежащее как прямой объект; (4) ошибка в выбор тип синтаксический отношения, приводить к изменение структура — например, в предложение «банкнот прошлое года» проставляться два генитивный отношение (слово «прошлое» считаться существительным) вместо атрибутивный и генитивный (слово «прошлое» — прилагательное, определение к слово «год»). на основа подобрать материал мы провести исследование возможный использование различный критерий для снятие структурный омонимии. следовать отметить, что никакой критерий не мочь нивелировать ошибка тип (1) — они можно устранить только путём повышение полнота грамматики. ошибка тип (3) и (4) мочь быть исправить как при помощь изменение модель вес синтаксический связей, так и при помощь семантический анализа, что выходить за рамка данный исследования. наиболее же частотный ошибка тип (2) напрямую не мочь быть исправить при помощь критерий лексический сочетаемости, т.к. под лексический сочетаемость мы понимать бинарный отношение, а сочетание с предложный группа состоять из три слов, что требовать адаптация статистический модели. это планироваться сделать в будущем.