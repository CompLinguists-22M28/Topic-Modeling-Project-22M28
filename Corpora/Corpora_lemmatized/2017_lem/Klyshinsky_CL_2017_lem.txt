э. с. клышинский, д. в. королев, а. а. власов метод поиск группа слово в текст с неснятый омонимия программный инструмент для синтаксический анализ текст являться рабочий инструмент лингвист на протяжение уже долгий лет. однако для решение частный задача не всегда требоваться проводить полный синтаксический анализ текст или он фрагментов. частичный синтаксический анализ позволять извлечь только интересовать исследователь связи, при это занимать маленький вычислительный ресурс и простой поддаваться формализации. в качество пример практический применение здесь можно привести автоматический извлечение термин из текст предметный области. так, в работа [захар 2014] показано, что термин частый весь представлять себя именной группу, извлекать именно с использование частичный синтаксический анализа. для проведение частичный синтаксический анализ текст разработать такой системы, как nltk [bird 2009], cql [cql 2017] и lspl [большак 2010]. один из недостаток (ить достоинством) этот система являться необходимость работа с текст с снятой омонимией. с один стороны, снятие омонимия позволять существенно ускорить поиск. однако, с другой стороны, сам по себя исследование омонимия составной конструкция в текст мочь являться предмет научный поиска. помимо этого, как быть показать в наш предыдущий работа [клышинский 2015], текст на русский язык обладать больший (порядок 80 %) количество слов, не омонимичный по часть речи. этот факт позволять искать некоторый синтаксический конструкция (например, упоминаться уже именной группы) в разметить текст без снятой омонимия с высокий степень полнота (хотеть и с падение точности). в связь с это мы разработать новый нотация для поиск контактный фрагмент текста, ориентировать на работа с омонимичный разметка и основать на формализм регулярный выражений. помимо стандартный синтаксис регулярный выражений, нотация включать в себя ряд особенностей. терминальный символ описывать искомое слово в текст и позволять находить среди результат морфологический анализ это слово один вариант из множества, несколько вариант из множество или единственный вариант разбора. терминальный символ в нотация ограничить квадратный скобка и включать начальный форму, часть речь и грамматический параметр (разделяться точка с запятая и мочь опускаться). например, [;prep;] — любой предлог, а [быть^гь;] — глагол «быть» в любой форме. имя и значение грамматический параметр задаваться раздельно. равенство параметр некоторый значение обозначаться как «название=значение». так, глагол «быть» в прошедшее время и мужской родиться записываться как [быть^гь; tense=past, gender=m], а произвольный существительное в именительный падеж [;noun; case=i]. при такой запись слово должный обладать хотя бы один вариант разбора, попадать под задать шаблон. для обозначение уникальность набор значение использоваться восклицательный знак, который ставиться перед значением. например, всё вариант анализ слово являться существительными: [;!noun;]. поиск уникальный значение реализовать для начальный формы, часть речь или весь набор значение в целом: [!красный ;adj; case=i, gender=f] — прилагательное в именительный падеж и женский роде, начальный форма — только «красный». вариант анализ один слово записываться при помощь знак &. например, существительное в именительный падеже, омонимичный глаголу: [;noun; case=i & ;verb; ] . для проверка согласование использоваться знак + после название параметра. именной группа, в который прилагательное согласоваться с существительным: ([;!adv;]?[;!adj; gender+, number+, case+])+[;!noun; gender+, number+, case+] — положительный итерация наречие (мочь отсутствовать) и прилагательное после который идти существительное; род, число и падеж слово совпадают; всё слово однозначный по часть речи. отсутствие согласование указываться при помощь знак минус: [;noun; case+][;adj; case-] — существительное, за который следовать прилагательное в друг падеже. если значение параметр не равно определённый значению, перед они ставиться минус: [;adj; comp=-com] — прилагательное, не в сравнительный степени. мы быть разработать программный обеспечение, находить нужный фрагмент в корпус большой размера. он плюс являться возможность обрабатывать текст на локальный машина в режим он-лайна (за счёт отсутствие модуль снятие омонимия он скорость работа около 1 млрд токен в час). программа извлекать как сочетания, так и предложения, в который они употребляются. программа быть использовать для исследование лексика русский языка. на пример слово «гордый» быть исследовать особенность статистика употребление слово в корпус различный стилей. [lukashevich 2016] однако, основный предназначение программа быть извлечение синтаксически связанный словосочетание из больший корпус текстов. извлекаться связь существительное и прилагательных, входящий в именной и предложный группы, глагольный группа (глагол + предлог + существительное, причастие и деепричастие считаться форма глагола), связь глагол с наречием. здесь скорость работа программа оказаться важна, так как общий размер корпус достигнуть 17 млрд словоупотреблений, извлечь из корпус разный стиля: новостных, научных, беллетристика, википедия. применение полный синтаксический анализ сделать бы данный проект нереальным, а снятие омонимия замедлить бы работа как минимум на порядок. основной проблема здесь оказаться разработка правил, гарантировать наличие синтаксический связь между словами. так, например, помимо очевидный требование к согласование существительное и прилагательное по роду, число и падежу, необходимо быть определить, что прилагательное не находиться в краткий форме. в противный случай в результат попадать фраза с прилагательным, подчиняться глаголу, а не существительному: быть ли прилично пальто, который мы купить в прошлый году? проверка сосед слово позволить также извлекать конструкции, содержать омонимичный слова. так, например, при помощь правил, записать ниже, извлекаться именной конструкции, в который существительное быть омонимичный глагол или прилагательному, однако следующий за они слово чётко указывать на разбор в качество существительного. ([;prep;] | [!;verb;] | [!;deepr;] | [!;participle;] | [;poss_pron;]) ([!;adv;]?[2:;!adj; gender+, number+, case+, comp=-com])+([3:;noun; gender+, number+, case+ & ;verb; ] | [3:;noun; gender+, number+, case+ & ;adj; ])[!;prep] a([!;adv;]? [;!adj; gender+, number+, case+, comp=-com])+([;noun; gender+, number+, case+ & ;adj; ] | [;noun; gender+, number+, case+ & ;verb; ])[!;prep;] дать конструкция означает, что если именной группа ограничить справа предлогом, а слева предлогом, глагол в один из форм, притяжательный местоимение или начало предложения, то существительное в именной группа мочь быть омонимичный прилагательное или предлогу. общий объём получить сочетание существительное + прилагательное: 383 млн сочетание (12,1 млн уникальный сочетание в начальный формах) для 67000 существительное и 41000 прилагательных. глагол+предлог+существительное: 349 млн сочетание (29,2 млн уникальный сочетание в начальный формах) для 28000 глагол и 73000 существительных. извлечь сочетание выложить на сайт http://cosyco.ru/ . с один стороны, разработать программный обеспечение позволять быстро извлекать сочетание из новый корпусов. с другой стороны, использовать подход существенно ограничивать полнота извлекать конструкций: из 17 млрд словоупотребление в база дать попасть не более 1,5 млрд, тогда как по самый скромный подсчёт полный синтаксический анализ дать бы как минимум в пять раз больший результаты, хотя они достижимость всё ещё оставаться под вопросом.