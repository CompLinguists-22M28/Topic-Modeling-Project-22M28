ПОЛИМОРФНЫЕ МОРФОЛОГИЧЕСКИЕ БАЗЫ ДАННЫХ
С.А. Коваль
(Санкт-Петербургский государственный университет)
Вполне привычным является тот факт, что один и тот же объем хорошо известной лингвистической информации, в частности, информации о морфологии некоторого языка, представляется разнообразными способами в различных компьютерных приложениях с лингвистическим компонентом.
Есть ли различия между этими представлениями в объеме воспроизводимой информации? Насколько эти различия оправданы и насколько случайны? И насколько однозначно, с точки зрения сохранения информации, передается содержание фундаментальной морфологии в компьютерной форме? В случае русского языка речь идет об однозначности воспроизведения в форме баз данных информации, сосредоточенной прежде всего в «Грамматическом словаре русского языка» А.А. За¬лиз¬ня¬ка, но подобные вопросы могут быть заданы и для других языков, морфология которых моделируется в системах автоматической обработки текста.
Для ответа на эти вопросы следовало бы взять за основание для сравнения инвариантное компьютерное представление морфологии отдельно взятого языка. Найти ответы стало бы еще легче, если бы были разработаны процедуры, адаптирующие такое инвариантное, или генеральное, представление к конкретным практическим задачам и условиям.
Эти процедуры могут быть стандартизованы, так как для реального, фиксированного во времени состояния инженерно-лин¬гвис¬тических технологий набор вариантов адаптации не так уж велик. Выбор конкретного варианта определяют функциональный фактор (назначение и желаемые технические характеристики) и фактор объекта применения (подъязык, с которым предстоит работать системе). Можно с достаточной степенью точности утверждать, что процедуры с использованием морфологического компонента сводятся к трем типам: анализ, синтез и морфологическая типизация, под которой понимается определение словоизменительного типа для несловарного слова. Способы реализации этих процедур можно если не перечислить, то задать в виде исчисления на основе ряда параметров.
С технической точки зрения задача построения такой базы данных разбивается на две подзадачи:
•	построение декларативного компонента, т. е. разработка структуры данных, которая была бы лингвистически адекватной и технически эффективной и позволяла бы отразить как можно больший круг морфологических явлений (не обязательно русского языка и не обязательно словоизменительных);
•	построение процедурного компонента, т. е. программирование процедур адаптации данных к конкретным функциям и подъязыкам.
При современном состоянии прикладного программного обес¬печения потребность в легко адаптируемых представлениях данных может быть удовлетворена даже в коммерческих СУБД общего назначения типа Microsoft Access. Наличие в базах данных этих СУБД таких компонентов, как запросы и команды VBA, позволяет легко видоизменять объем и структуру данных непосредственно перед их экспортом из генерального представления в адаптированные варианты представления для конкретных приложений.
Данную возможность подтверждает создаваемая автором база данных, структура которой уже в теперешнем состоянии вполне адекватна для представления системы именного словоизменения русского языка в письменной форме. 
В соответствии с идеологией реляционных баз данных, информация о морфологии русского языка разбивается на ряд связанных друг с другом реляционных таблиц, каждая из которых составляет фрагмент данных, относительно независимый от данных других таблиц. Схема данных для такого представления показана на рисунке.
Среди зависимостей, которые отражены в таблицах, упомянем следующие:
1) таблица Лексикон – от ключа лексемы (КлЛекс) к его морфологической характеристике (МорфТип) и прочей информации, необходимой для функционирования данной системы обработки текста за рамками морфологического компонента (ЛО – «лексикографическое описание»); 
2) таблица ПарПоМорфТип – от морфологической характеристики и указания на определенную подобласть морфологической характеристики (NКластера; например, для прилагательных выделяются три кластера: склоняемые формы, краткие формы и формы сравнительной степени) к номеру парадигмы (ИдПар);
3) таблица ПоляПарадигм – от номера парадигмы (ИдПар) и номера поля в парадигме (NПоля) к правилу, по которому образуется данная форма (Правило) и стилистическому регистру, указывающему на ограничения в употреблении получаемой формы (поле Регистр); в дан¬ной версии основным правилом является конкатенация основы и некоторой строки – «машинного окончания» (или «квазиокончания»), которое, собственно, и является значением атрибута Правило. Основа лексемы строится по начальной форме, входящей в ключ лексикона (КлЛекс), и формативу начальной формы (Поле0 в таблице Парадигмы). Для записей таблицы ПоляПарадигм предусматривается также атрибут МорфТипПродолж, позволяющий рассматривать соединение основы и машинного окончания первого порядка как основу для присоединения машинных окончаний второго порядка. В настоящее время, когда база заполняется данными об именном словоизменении, этот атрибут не используется, однако предполагается, что его наличие позволит использовать ту же структуру данных для представления информации о глагольном словоизменении. Так, форма обманувшимися может быть получена из основы обману при последовательном присоединении машинных окончаний (которые в данной ситуации корректнее было бы назвать машинными аффиксами) вш, ими и ся, каждое из которых соответствует определенной парадигме определенного кластера определенного морфологического типа, хотя все они будут храниться в таблице ПоляПарадигм. В дальнейшем с помощью подобных приемов может быть отражена информация о некоторых словообразовательных моделях.
Если задача конструирования декларативного компонента  генерального представления данных о морфологии в основном решена, то создание процедурного компонента только начина-ется. Напомним, что в конечном счете генеральное представ-ление дол¬жно быть снабжено системой пользовательских настроек, на основании которых будут запускаться те или иные запросы и команды VBA для выполнения экспорта в нужный формат. База дан¬ных, обладающая такими характеристиками, может рассматриваться, если воспользоваться терминологией объектно-ори¬ен¬ти¬рованного программирования, как единый полиморфный объект .
В современном состоянии поддерживается адаптация базы данных к задаче морфологического синтеза (являющегося простейшей функцией морфологического компонента), а также к детерминированному морфологическому анализу слева направо методом «the longest match». Далее приводится один из используемых для этого запросов, строящий основу для словоформ кластера 1:
SELECT Лексикон.КлЛекс, НачФорма.НачФорма, Парадигмы.Поле0, IIf([Поле0]="",0,Len([Поле0])) AS ДлОкон,Left([НачФорма], (Len([НачФорма])-[ДлОкон])) AS Основа1
FROM (МорфТипы INNER JOIN (Лексикон INNER JOIN [НачФорма] ON Лексикон.КлЛекс=НачФорма.КлЛекс) 
ON МорфТипы.МорфТип=Лексикон.МорфТип) 
INNER JOIN ((Кластеры INNER JOIN ПарПоМорфТип 
ON Кластеры.NКластера=ПарПоМорфТип.NКластера) 
INNER JOIN Парадигмы ON (Парадигмы.ИдПар=ПарПоМорфТип.ИдПар) AND (Кластеры.NКластера=Парадигмы.NКластера)) 
ON МорфТипы.МорфТип=ПарПоМорфТип.МорфТип
WHERE ((Кластеры.NКластера)=1)
WITH OWNERACCESS OPTION;
В дальнейшем параллельно с заполнением базы данных предстоит создать процедуры, обеспечивающие экспорт базы в представления, оптимизированные для других методов морфологического анализа и для морфологической типизации, а также процедуры, фильтрующие содержимое генерального представления на основании сведений о подъязыке, с которым предстоит работать. Когда будет обеспечено автоматическое приведение в действие нужных запросов и команд на основании данных, введенных пользователем через формы, можно будет говорить о полноценном полиморфизме создаваемой базы данных.