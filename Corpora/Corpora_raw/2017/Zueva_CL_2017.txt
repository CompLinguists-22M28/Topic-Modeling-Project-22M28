С.	А. Зуева
ПОИСК КЛАСТЕРОВ В СЕТИ ТЕКСТУАЛЬНЫХ СВЯЗЕЙ СЛОВ
Данный доклад строится на материале корпуса политических статей газеты «Гардиан» за пять лет (2000, 2005, 2010, 2013 и 2015 год), который в совокупности составляет 16,6 млн словоупотреблений. Ставится задача определить текстуальные связи пар слов, представленных в корпусе. При помощи специально написанной программы корпус делится на равные отрезки по 50 слов, каждый такой отрезок получил свой номер (адрес). Если число общих адресов двух слов существенно отличается от ожидаемого в предположении их независимости (нулевая гипотеза), делается вывод о текстуальной связи этих слов. Рассмотрим пример из политического корпуса «Гардиан» за 2015, где всего 82 650 адресов (N = 82650). Примем нулевую гипотезу, что слова CUT и BUDGET употребляются в тексте независимо друг от друга. Зная частоту  этих двух слов CUT (f = 4117), а BUDGET (f = 1981) рассчитаем математическое ожидание (m) того, что они встретятся на одном отрезке по формуле:
Подставляя фактические значения имеем m ~ 98.67, в действительности частота их совместного употребления в 5 раз больше — F = 530. Далее мы будем использовать следующую формулу, для определения меры неслучайности встречи двух слов на одном отрезке [Shaikevich 2001]:
Применяя формулу (2) получаем:
Пары слов со значениями S = 3 следует считать полезными для анализа, при S > 4 можно с уверенностью говорить, что использование данных слов характерно для представленного корпуса . В среднем для каждого года количество полученных текстуальных связей при значении коэффициента S > 3 составляет 150 000 пар. В дальнейшем будем работать с сетью, образованной стабильными текстуальными связями, наблюдаемыми в 4 или 5 годах одновременно (16 511 текстуальных связей, 5110 разных слов). При работе с такой внушительной сетью возникает необходимость поиска способов выделения кластеров. Один из возможных алгоритмов, которые помогут нам провести кластеризацию на полученном множестве начинается с анализа трех взаимосвязанных пар, например, следующие пары связаны друг с другом и образуют циклический граф: (voting system); (system first-past-the-post); (first-past-the-post voting). Будем считать такую группу минимальным кластером, назовем ее тройкой (triplet), и изображать следующим образом: (“voting”-“sys- tem”-“first past the post”).
Минимальные кластеры часто являются только отправной точной для построения кластеров большего размера. Большая часть минимальных кластеров образует сложную сеть связей вокруг одной вершины, которая является общей для нескольких троек. Будем называть такие кластеры по ключевому слову, например, кластер “voting”, который объединил 133 троек в том числе “voting”-“system”-“first-past-the-post”); (“voting”-“system”-“electoral”); (“voting”-“system”-“representation”).
Построенная сеть текстуальных связей позволяет выделить 2330 кластеров и допускает процедуру сравнения между собой для определения на сколько процентов они совпадают. Так, оказалось, что кластеры “state-school” и “headtecher” состоят на 100 % из одинаковых слов (school, education, teacher, pupil, academy, children). Соответственно мы можем смело провести их объединение и получить кластер “State school” — “Headtecher” (school, education, teacher, pupil, academy, children, state-school, headteacher). Допустимо проводить и более сложные объединения, так, например, с кластером «general-election» совпадают больше, чем на 35 % следующие кластеры3: (byelection 38 %, election 47%, swing 38 %, win 37 %).
Опыт построения кластеров вокруг одной вершины с последующим объединением в расширенные кластеры кажется перспективным. Рассмотрим кластер, образованный вокруг вершины debate, который состоит из 10 троек (рис. 2.). На графе отчетливо выделяются 3 основные области использования слова debate в политическом дискурсе: СМИ, предмет дебатов (поправки, предложения, вносимые в парламенте, какой-либо вопрос и пр.), а также слова, связанные непосредственно с семантикой слова debate (дискутировать, вовлекать, предмет).
Как видим, выбранный алгоритм поиска кластеров позволяет строить такие кластеры, которые включают в себя все области употребления слова типичные для дискурса. Можно использовать модифицированные вариант алгоритма, осуществляющий поиск кластеров, объединенных одним общим ребром. Будем называть такие кластеры по двум вершинам, например, “Campaign-Party”. Так, кластер debate разбивается на 3 более узконаправленных кластера: Commons-Debate, Discussion-Debate и TV-Debate. Использования данного алгоритма позволило выделить 8848 кластеров, которые объединяют минимум 2 тройки.
Аналогично описанному выше методу получения расширенных кластеров по вершине, можно сравнивать между собой кластеры полу-ченные по ребру. Так, например, кластеры Finance-Economic и Borrowing-Finance совпадают на 95 %. Существуют кластеры, которые полностью поглощаются большими. Так кластер Election-Poll одновременно входит в разные кластеры: Vote-Byelection; Election-Byelection; Seat-Byelection; Poll-Election; Seat-Poll; и др. Кластер Budget-Spending включает в себя кластеры: Udget-Announce; Budget-Financial; Budget-Health; Chancellor-Finance; Cut-Finance; и др. Таким образом, возможно проводить объединение кластеров по двум принципам, меньший кластер входит в больший или несколько меньших кластеров входят в состав большего, также два приблизительно равнозначных по количеству слов кластера могут совпадать полностью или частично.
Использование описанных выше методом поиска кластеров в по-лученной сети текстуальных связей дает позитивные результаты и кажется многообещающим.