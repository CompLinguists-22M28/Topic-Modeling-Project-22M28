КОРПУС-МЕНЕДЖЕР ДЛЯ ТЮРКСКИХ ЯЗЫКОВ:
ОСНОВНАЯ ФУНКЦИОНАЛЬНОСТЬ
1. Прототип корпус-менеджера
В настоящее время разработаны различные по функционалу системы «корпус-менеджеры», предназначенные для решения определенного круга задач. Можно указать ряд наиболее актуальных разработок для целей настоящей статьи. Восточно-армянский национальный корпус (http://eanc.net), на платформе которого располагается электронный корпус татарского языка «Туган Тел» (http://web-corpora.net/TatarCorpus), имеет 5 различных видов поиска: прямой поиск по слову, прямой поиск по лемме, обратный поиск, точный и неточный поиск. Функционал, реализованный в платформе Восточно-армянского национального корпуса, является базовым для корпус-менеджера, представленного в настоящей статье.
Национальный корпус русского языка (http://ruscorpora.ru) обладает функционалом, схожим с платформой Восточно-армянского национального корпуса. Отличительной особенностью платформы Национального корпуса русского языка является поддержка расширенного синтаксиса поисковых запросов при прямом поиске, а именно поддержка минус-слов, поиска по части слова и логических операторов. Эти возможности были добавлены в поисковый функционал разработанной системы. Кроме того, в разработанном корпус-менеджере реализован фразовый поиск.
Помимо разработки расширенного поискового функционала перед авторами стояли задачи оптимизации времени исполнения поисковых запросов (менее 1 секунды на запрос), поддержка произвольных морфологических формул с использованием операторов И, ИЛИ, НЕ и выставления приоритетов выполнения при помощи скобок, а также выявление логических ошибок в формулах. Примером логической ошибки является противоречивая формула «!(N|V),INF_1», которая означает «НЕ имя существительное (N) И НЕ глагол (V) И инфинитив, оканчивающийся на аффикс –ырга (INF_1)». Противоречивость данной формулы заключается в том, что все элементы, относящиеся к классу «INF_1» также относятся и к классу «V», но в первой части все элементы класса «V» исключаются, соответственно, результатов по данному поисковому запросу существовать не может.
1.1. Цели и задачи
Сформулируем основные цели и задачи данной разработки:
● Разработать открытую платформу для системы управления лингвистическими данными (корпус-менеджер).
● Специализировать решения системы для поддержки тюркских языков.
● Разработать расширенный поисковый функционал для электронных корпусов.
● Разработать прототип системы «корпус-менеджер» для электронного корпуса татарского языка.
Основные задачи, которые решены в прототипе системы «корпус-менеджер» для татарского языка:
● Поиск информации в базе данных электронного корпуса татарского языка по словоформам или леммам.
● Поиск информации в базе данных электронного корпуса татарского языка по морфологическим свойствам с использованием логических выражений.
● Поиск информации в базе данных электронного корпуса татарского языка по словоформам или леммам и морфологическим свойствам с использованием логических выражений.
● Добавление, изменение и удаление информации в базе данных электронного корпуса татарского языка.
● Сбор статистических данных по базе данных электронного корпуса татарского языка.
2. Архитектура корпус-менеджера
Для функционирования корпус-менеджера используется следующее программное обеспечение: веб-сервер Apache (или HHVM), интерпретатор PHP, СУБД MariaDB, in-memory хранилище Redis (кэширующий сервис), сервер очереди MemcacheQ. Всё программное обеспечение распространяется с открытым исходным кодом и может быть свободно использовано в некоммерческих целях.
Программная реализация использует концепцию MVC (Model-View-Controller), несколько измененную для решения задач корпус-менеджера.
На рисунке 1 представлена общая концепция архитектуры системы на примере поискового функционала. После формирования запроса пользователем, первым этапом является проверка запроса подходящим контроллером на наличие синтаксических ошибок, а также подозрительных действий со стороны пользователя (атаки). Вторым этапом является обработка поискового запроса, а именно его проверка на наличие логических ошибок и приведение текстового запроса к структурированному объекту запроса. На третьем этапе объект запроса используется моделью поиска для формирования запроса к БД. Затем на основе сформированного запроса к БД проверяется наличие кэшированных результатов, при их наличии дальнейший запрос к БД не производится, что существенно уменьшает время на выполнение запроса и потребляемые ресурсы. На пятом этапе выполняется запрос к БД, а полученные по этому запросу результаты используются для формирования объектов поисковой выдачи. Последним этапом является отображение результатов поиска пользователю. Объекты поисковой выдачи выводятся в браузер пользователя в виде документа HTML.
3. Хранение данных электронного корпуса
Архитектура системы и, в частности, БД построена таким образом, чтобы иметь возможность обрабатывать запросы следующих типов [1]:
● Прямой поиск (по словоформе или лемме);
● Обратный поиск (по морфологическим свойствам), морфологические свойства могут быть представлены в виде формулы одного из видов:
С использованием конъюнкций;
С использованием дизъюнкций;
С использованием отрицаний;
Произвольная формула (с конъюнкцией, дизъюнкцией и отрицанием);
● Смешанный поиск (по морфологическим свойствам с указанием словоформы или леммы).
Размеченные тексты разбираются на отдельные словоформы и их разметку, затем записываются в БД в виде обратного индекса, списка предложений (контекстов) и списка документов. В таблице обратного индекса морфологические свойства записаны в виде двоичных векторов. Поиск производится по обратному индексу с применением битовых масок, что существенно увеличивает скорость выполнения запросов к БД. Общее количество словоформ в таблице обратного индекса составляет более 35 млн.
5. Заключение
Описанный в статье прототип корпус-менеджера является оптимальным решением для задач поиска и управления данными в электронном корпусе. Функционал системы в основных функциях соответствует функционалу платформ Национального корпуса русского языка и Восточно-армянского национального корпуса, но реализация конкретных задач позволяет говорить о существенном приросте эффективности данной платформы как со стороны обширности функционала, так и со стороны скорости взаимодействия пользователя с системой. Основными преимуществами корпус-менеджера, разработанного авторами, также являются готовая поддержка татарского языка и возможность быстрой интеграции с электронными корпусами других языков, в первую очередь, тюркских, поддержка произвольных морфологических формул, выявление логических ошибок, открытость используемых технологий.
Для проверки пригодности, правильности, согласованности, характера изменений во времени параметров запросов, было проведено комплексное тестирование системы. Тестирование пригодности показало, что предложенные методы полностью решают поставленные задачи. Тестирование правильности, основанное на сравнении с другим эталонным методом представления и обработки запросов, показало, что предложенные методы работают правильно. Тестирование согласованности и характера изменения во времени показало, что предлагаемый синтаксис лексической и морфологической составляющей поискового запроса верно интерпретируется системой, а время, необходимое для обработки и выполнения поискового запроса системой, не превышает 0,05 сек. в 98,71% случаев для лексического поиска, в 77,71% случаев для морфологического поиска и в 98,08% случаев для лексико-морфологического поиска. Во многом, таких результатов удалось добиться благодаря представлению данных в виде семантической сети и предложенным методам представления и обработки поисковых запросов.
